// Overview of Cisco Firewall MIB
// ==============================
// This MIB Module models status and performance
// statistics pertaining to the common features supported
// by Cisco firewall implementations. For each firewall 
// feature, capability (if applicable) and statistics are
// defined. Supporting the configuration of firewall 
// features is outside the scope of this MIB.
// 
// Following are the major firewall features:
// 
// 1) 'Stateful Packet Filtering'
//      Creating and maintaining the state of authorized 
//      traffic flows dynamically to permit only
//      flows authorized by the policy is a mandatory 
//      function of a firewall.  
//      This MIB instruments the activity and memory
//      usage by this function.
// 
// 2) 'Application Inspection'
//      This refers to the function of inspecting the
//      headers of layer 3 and layer 4 protocols and
//      creating dynamic entries in the connection
//      table for traffic flows spawned by an already
//      established traffic flow.
// 
//      This MIB reflects the protocols that are being 
//      inspected.
// 
// 3) 'URL Filtering'
//      This refers to the function of facilitating
//      or restricting URL access requests through
//      the firewall by consulting either local policy
//      or that configured on a dedicated URL filtering
//      server.
// 
//      This MIB instruments the URL filtering activity,
//      the status and activity of distinct URL filtering
//      servers configured on the firewall and the
//      impact of the performance of the URL filtering
//      servers on the latency and throughput of the
//      firewall.
// 
// 4) 'Proxy Authentication'
//      This refers to the function of authenticating
//      and/or authorizing users on behalf of servers
//      on the secure side of the firewall. This operation
//      could affect the throughput of the firewall.
// 
//      The MIB objects pertaining to Proxy Authentication
//      will be defined in a subsequent revision of this
//      MIB. 
// 
// 
// 5) 'Transparent Mode Operation'
//      A firewall could operate as a bridge and yet
//      filter traffic based on layer 3-layer 7 control
//      and payload information. Operating in this mode
//      makes it easy to implement a firewall without
//      fragmenting existing subnets. Another advantage
//      of this mode of operation is enhanced security.
// 
//      This MIB instruments the status, activity, 
//      and performance of the firewall in this mode.
//      Please note that to fully manage a firewall
//      operating in this mode, the firewall must also
//      support the bridge MIB (BRIDGE-MIB).
// 
// 
// 6) 'Advanced Application Inspection and Control'
//      This function is also termed 'Application
//      Firewall' and pertains to inspecting payload and
//      headers of application traffic to make sure the
//      traffic flows conform to the configured security
//      policy.
// 
//      Monitoring this function entails identifying the
//      security alerts generated by this function and 
//      measuring the impact on firewall performance by
//      this task. Application Firewall will be 
//      instrumented in a separate MIB dedicated for the
//      function.
// 
// 7) 'Failover' or 'Redundancy'
//      Redundancy configuration is essential for business
//      critical firewalls.
// 
//      Instrumenting this function entails reflecting
//      the configuration of redundancy and identifying
//      failover events.
// 
//      The MIB objects pertaining to Proxy Authentication
//      will be defined in a subsequent revision of this
//      MIB. 
// 
// 
// The management information for each firewall feature
// is defined in a distinct module compliance unit. The 
// compliance units corresponding to basic features of 
// firewalls are defined as mandatory.
// 
// Acronyms
// ========
// Following are definitions of some terms used in this
// module. Please refer to the module conformance for a
// glossary of feature-specific terms.
// 
//  `Firewall'
//     A firewall is a set of related programs, 
//     implemented on a host or a network device, that
//     protects the resources of a private network from
//     users from other networks. Common firewalling
//     functions include stateful packet filtering,
//     proxy authentication of users on behalf of 
//     applications on the secure side of the firewall,
//     URL access control, inspection of payload of 
//     traffic streams to determine security threats.
// 
//  `Layer2 Firewall' or 'Transparent Firewall'
//     A firewall device that operates as a bridge
//     while performing firewalling function.
// 
//  `Connection'
//     The record in the firewall of a traffic strean
//     that has been authorized to flow through the 
//     firewall.
// 
//  `Half Open Connection'
//     For a connection oriented protocol: a connection
//     that has not reached the established on both the
//     sides of the connection.
//     For a connection-less protocol: the connection
//     corresponding to a traffic stream where traffic
//     flow has occurred (since the establishment of the
//     connection entry) only on one direction.
// 
//  `Embryonic Connection'
//     The connection entry corresponding to an 
//     application layer protocol in which the signaling
//     channel has been established while the setup of
//     the data channel is underway.
// 
//  `Policy'
//     An element of firewall configuration that
//     identifies the access rights to a resource by a
//     traffic source. An example of a policy is an 
//     Access Control Rule.
// 
//  `Policy Target'
//     An entity to which a policy is applied so that 
//     the action corresponding to the policy is taken
//     only on traffic streams associated with the
//     entity. An example of a policy target is an 
//     interface.
// 
//  `URL Filtering Server'
//     A server which is employed by the firewall to 
//     enforce URL access policies.
// 
//  `Protocol Data Unit' or PDU
//     An instance of the unit of information using which
//     a protocol operates is called the Protocol Data
//     Unit or the PDU of the protocol.
// 
//  `Deep Packet Inspection'
//     The task of examining the contents of the payloads
//     of one or more layer 7 application protocols 
//     with a view to enforcing the local security
//     policies termed 'Deep Packet Inspection'.
// 
//  `Advanced Application Inspection and Control'
//     An entity that performs deep packet inspection
//     of layer 7 application protocol data units is
//     termed an 'Application Firewall'.
package cisco_unified_firewall_mib

import (
    "fmt"
    "github.com/CiscoDevNet/ydk-go/ydk"
    "github.com/CiscoDevNet/ydk-go/ydk/types"
    "github.com/CiscoDevNet/ydk-go/ydk/types/yfilter"
    "github.com/CiscoDevNet/ydk-go/ydk/models/cisco_ios_xe"
    "reflect"
)

func init() {
    ydk.YLogDebug(fmt.Sprintf("Registering top level entities for package cisco_unified_firewall_mib"))
    ydk.RegisterEntity("{urn:ietf:params:xml:ns:yang:smiv2:CISCO-UNIFIED-FIREWALL-MIB CISCO-UNIFIED-FIREWALL-MIB}", reflect.TypeOf(CISCOUNIFIEDFIREWALLMIB{}))
    ydk.RegisterEntity("CISCO-UNIFIED-FIREWALL-MIB:CISCO-UNIFIED-FIREWALL-MIB", reflect.TypeOf(CISCOUNIFIEDFIREWALLMIB{}))
}

// CISCOUNIFIEDFIREWALLMIB
type CISCOUNIFIEDFIREWALLMIB struct {
    parent types.Entity
    YFilter yfilter.YFilter

    
    Cufwconnectionglobals CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals

    
    Cufwconnectionresources CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources

    
    Cufwconnectionreportsettings CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings

    
    Cufwapplinspectiongrp CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp

    
    Cufwurlfilterglobals CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals

    
    Cufwurlfilterresourceusage CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage

    
    Cufwaaicglobals CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals

    
    Cufwaaichttpprotocolstats CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats

    
    Cufwl2Fwglobals CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals

    
    Cufwnotifcntlgrp CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp

    // This table summarizes the connection activity on the firewall per
    // layer3-layer 4 protocol instance.  Each entry in the table lists the
    // connection summary of a distinct network protocol.  For instance, the
    // conceptual row corresponding to the index       cufwConnProtocol = fwpTcp 
    // yields the summary of TCP connection activity on the  firewall since its
    // reboot.
    Cufwconnsummarytable CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable

    // This table lists the summary of firewall  connections pertaining to Layer 7
    // protocols, catalogued by distinct application protocols.  Each entry in the
    // table lists the connection summary corresponding to a distinct application 
    // protocol.  For instance, to obtain the connection summary  for SMTP on the
    // firewall since the last reboot  of the device, use the conceptual row 
    // corresponding to      cufwAppConnProtocol = fwApSmtp.
    Cufwappconnsummarytable CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable

    // This table lists the summary of firewall  connections for layer3-layer 4
    // protocols catalogued  on a per policy basis.  Each entry in the table lists
    // the connection summary of a distinct network protocol, configured on the
    // specified policy on the firewall, and pertaining to a specified  target to
    // which the policy is currently applied.   If a policy is bound to a target,
    // it would have one or more entries in this table. If the policy is  detached
    // from the target, all entries corresponding  to the association between the
    // policy and the target  are elminated from this table.  Although the
    // information is indexed by policy targets as well, one may aggregate the
    // connection summary for a specific policy across all the target to which the
    // policy is currently applied by setting        cufwConnPolicyTargetType = 
    // 'targetAll'.
    Cufwpolicyconnsummarytable CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable

    // This table lists the summary of firewall  connections pertaining to Layer 7
    // protocols, catalogued on a per policy basis  Each entry in the table lists
    // the connection summary of a distinct application protocol,  configured on
    // the specified policy on the firewall,  and pertaining to a specified target
    // to which the policy has been applied.  If a policy is bound to a target, it
    // would have one or more entries in this table. If the policy is detached
    // from the target, all entries corresponding to the association between the
    // policy and the target are elminated from this table.  Although the
    // information is indexed by policy targets as well, one may aggregate the
    // connection summary for a specific policy across all the target to which the
    // policy is currently applied by setting        cufwAppConnPolicyTargetType =
    // 'targetALL'.
    Cufwpolicyappconnsummarytable CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable

    // This table identifies if an application protocol has been configured for
    // inspection and if so, the name of  the firewall policy or the inspection
    // configuration that configures the specified protocol for inspection. The
    // table also identifies if the specified protocol is actively being
    // inspected.  This table may be used by an administrator to quickly identify
    // if a protocol is being subjected to application inspection by the managed
    // firewall.
    Cufwinspectiontable CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable

    // This table lists the URL filtering servers configured on the managed device
    // and their performance statistics.  This table is not meant as a device to 
    // configure URL filtering servers.
    Cufwurlfservertable CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable
}

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetFilter() yfilter.YFilter { return cISCOUNIFIEDFIREWALLMIB.YFilter }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) SetFilter(yf yfilter.YFilter) { cISCOUNIFIEDFIREWALLMIB.YFilter = yf }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetGoName(yname string) string {
    if yname == "cuFwConnectionGlobals" { return "Cufwconnectionglobals" }
    if yname == "cuFwConnectionResources" { return "Cufwconnectionresources" }
    if yname == "cuFwConnectionReportSettings" { return "Cufwconnectionreportsettings" }
    if yname == "cuFwApplInspectionGrp" { return "Cufwapplinspectiongrp" }
    if yname == "cufwUrlFilterGlobals" { return "Cufwurlfilterglobals" }
    if yname == "cufwUrlFilterResourceUsage" { return "Cufwurlfilterresourceusage" }
    if yname == "cufwAaicGlobals" { return "Cufwaaicglobals" }
    if yname == "cufwAaicHttpProtocolStats" { return "Cufwaaichttpprotocolstats" }
    if yname == "cufwL2FwGlobals" { return "Cufwl2Fwglobals" }
    if yname == "cuFwNotifCntlGrp" { return "Cufwnotifcntlgrp" }
    if yname == "cufwConnSummaryTable" { return "Cufwconnsummarytable" }
    if yname == "cufwAppConnSummaryTable" { return "Cufwappconnsummarytable" }
    if yname == "cufwPolicyConnSummaryTable" { return "Cufwpolicyconnsummarytable" }
    if yname == "cufwPolicyAppConnSummaryTable" { return "Cufwpolicyappconnsummarytable" }
    if yname == "cufwInspectionTable" { return "Cufwinspectiontable" }
    if yname == "cufwUrlfServerTable" { return "Cufwurlfservertable" }
    return ""
}

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetSegmentPath() string {
    return "CISCO-UNIFIED-FIREWALL-MIB:CISCO-UNIFIED-FIREWALL-MIB"
}

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cuFwConnectionGlobals" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwconnectionglobals
    }
    if childYangName == "cuFwConnectionResources" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwconnectionresources
    }
    if childYangName == "cuFwConnectionReportSettings" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwconnectionreportsettings
    }
    if childYangName == "cuFwApplInspectionGrp" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwapplinspectiongrp
    }
    if childYangName == "cufwUrlFilterGlobals" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwurlfilterglobals
    }
    if childYangName == "cufwUrlFilterResourceUsage" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwurlfilterresourceusage
    }
    if childYangName == "cufwAaicGlobals" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwaaicglobals
    }
    if childYangName == "cufwAaicHttpProtocolStats" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwaaichttpprotocolstats
    }
    if childYangName == "cufwL2FwGlobals" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwl2Fwglobals
    }
    if childYangName == "cuFwNotifCntlGrp" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwnotifcntlgrp
    }
    if childYangName == "cufwConnSummaryTable" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwconnsummarytable
    }
    if childYangName == "cufwAppConnSummaryTable" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwappconnsummarytable
    }
    if childYangName == "cufwPolicyConnSummaryTable" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwpolicyconnsummarytable
    }
    if childYangName == "cufwPolicyAppConnSummaryTable" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwpolicyappconnsummarytable
    }
    if childYangName == "cufwInspectionTable" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwinspectiontable
    }
    if childYangName == "cufwUrlfServerTable" {
        return &cISCOUNIFIEDFIREWALLMIB.Cufwurlfservertable
    }
    return nil
}

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    children["cuFwConnectionGlobals"] = &cISCOUNIFIEDFIREWALLMIB.Cufwconnectionglobals
    children["cuFwConnectionResources"] = &cISCOUNIFIEDFIREWALLMIB.Cufwconnectionresources
    children["cuFwConnectionReportSettings"] = &cISCOUNIFIEDFIREWALLMIB.Cufwconnectionreportsettings
    children["cuFwApplInspectionGrp"] = &cISCOUNIFIEDFIREWALLMIB.Cufwapplinspectiongrp
    children["cufwUrlFilterGlobals"] = &cISCOUNIFIEDFIREWALLMIB.Cufwurlfilterglobals
    children["cufwUrlFilterResourceUsage"] = &cISCOUNIFIEDFIREWALLMIB.Cufwurlfilterresourceusage
    children["cufwAaicGlobals"] = &cISCOUNIFIEDFIREWALLMIB.Cufwaaicglobals
    children["cufwAaicHttpProtocolStats"] = &cISCOUNIFIEDFIREWALLMIB.Cufwaaichttpprotocolstats
    children["cufwL2FwGlobals"] = &cISCOUNIFIEDFIREWALLMIB.Cufwl2Fwglobals
    children["cuFwNotifCntlGrp"] = &cISCOUNIFIEDFIREWALLMIB.Cufwnotifcntlgrp
    children["cufwConnSummaryTable"] = &cISCOUNIFIEDFIREWALLMIB.Cufwconnsummarytable
    children["cufwAppConnSummaryTable"] = &cISCOUNIFIEDFIREWALLMIB.Cufwappconnsummarytable
    children["cufwPolicyConnSummaryTable"] = &cISCOUNIFIEDFIREWALLMIB.Cufwpolicyconnsummarytable
    children["cufwPolicyAppConnSummaryTable"] = &cISCOUNIFIEDFIREWALLMIB.Cufwpolicyappconnsummarytable
    children["cufwInspectionTable"] = &cISCOUNIFIEDFIREWALLMIB.Cufwinspectiontable
    children["cufwUrlfServerTable"] = &cISCOUNIFIEDFIREWALLMIB.Cufwurlfservertable
    return children
}

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetBundleName() string { return "cisco_ios_xe" }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) SetParent(parent types.Entity) { cISCOUNIFIEDFIREWALLMIB.parent = parent }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetParent() types.Entity { return cISCOUNIFIEDFIREWALLMIB.parent }

func (cISCOUNIFIEDFIREWALLMIB *CISCOUNIFIEDFIREWALLMIB) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals
type CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Connection Statistics Aggregation  Connection 1  +-----------+ 
    // ------------->|           |-------> Global Connection Summary Connection 2 
    // |           | ------------->|           | Connection 3  |           |
    // ------------->|   First   |------------> ConnSummary    |   Level   |      
    // (i.e, L-3/4 Protocol Connection 4  |Aggregation|             Connection
    // Summary) ------------->|           | .    |           | .    |          
    // |---------------> PolicyConnSummary  Connection N  |           |      
    // (i.e, L-3/4 Policy Target based ------------->|           |        Protocol
    // Connection Summary)   +-----------+     +-----------+  L-3/4 Protocol   |  
    // | Connection Summary |           | ------------------>|          
    // |---------> AppConnSummary    |           |         (i.e, L-7 Protocol    |
    // Second   |          Connection Summary)   |---Level---| L-3/4 Policy Target
    // |Aggregation| based Protocol    |           | Connection Summary  |        
    // | ------------------>|           |---------------> PolicyAppConnSummary   |
    // |       (i.e, L-7 Policy Target based   |           |        Protocol
    // Connection Summary)   +-----------+   Specifically, the object 
    // 'cufwConnGlobalNumAttempted' models the number of connections which are
    // attempted to be set up through the firewall.  This value is accumulated
    // from the last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwconnglobalnumattempted interface{}

    // The number of connection setup attempts that were aborted before the
    // connection could proceed to completion. The counter includes setup attempts
    // aborted by the firewall as well as  those aborted by the initiator and/or
    // the  responder(s) of/to the connection setup attempt.  Consequently, this
    // value subsumes the values of objects 'cufwConnGlobalNumPolicyDeclined' and 
    // 'cufwConnGlobalNumResDeclined'.  This value is accumulated from the last
    // reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwconnglobalnumsetupsaborted interface{}

    // The number of connections which were attempted to be setup but which were
    // declined due to reasons of security policy.  This includes the connections
    // that failed  authentication.  This value is accumulated from the last
    // reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwconnglobalnumpolicydeclined interface{}

    // The number of connections which were attempted to be setup but which were
    // declined due to  non-availability of required resources.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are Connections.
    Cufwconnglobalnumresdeclined interface{}

    // The number of connections which are in the process of being setup but which
    // have not yet reached the established state in the connection table. The
    // type is interface{} with range: 0..4294967295. Units are Connections.
    Cufwconnglobalnumhalfopen interface{}

    // The number of connections which are currently active. The type is
    // interface{} with range: 0..4294967295. Units are Connections.
    Cufwconnglobalnumactive interface{}

    // The number of connections which were active but which were since normally
    // terminated.  This value is accumulated from the last reboot of the
    // firewall. The type is interface{} with range: 0..18446744073709551615.
    // Units are Connections.
    Cufwconnglobalnumexpired interface{}

    // The number of connections which were active but which were aborted by the
    // firewall due to reasons of policy or resource rationing.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are Connections.
    Cufwconnglobalnumaborted interface{}

    // The number of embryonic application layer connections  (that is,
    // connections in which the signaling channel has been established while the
    // data channel is awaiting setup).  This value is accumulated from the last
    // reboot of the firewall. The type is interface{} with range: 0..4294967295.
    // Units are Connections.
    Cufwconnglobalnumembryonic interface{}

    // The averaged number of connections which the firewall  establishing per
    // second, averaged over the last 60  seconds. The type is interface{} with
    // range: 0..4294967295. Units are Connections per second.
    Cufwconnglobalconnsetuprate1 interface{}

    // The averaged number of connections which the firewall  establishing per
    // second, averaged over the last 300 seconds. The type is interface{} with
    // range: 0..4294967295. Units are Connections per second.
    Cufwconnglobalconnsetuprate5 interface{}

    // The number of active connections which correspond to remote access
    // applications. Specifically, the protocol for which the connection is
    // established must be one of PPP, PPTP, L2TP or remote access IPsec (IPsec
    // connections employing extended authentication).  This value is accumulated
    // from the last reboot of the firewall. The type is interface{} with range:
    // 0..4294967295. Units are Connections.
    Cufwconnglobalnumremoteaccess interface{}
}

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetFilter() yfilter.YFilter { return cufwconnectionglobals.YFilter }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) SetFilter(yf yfilter.YFilter) { cufwconnectionglobals.YFilter = yf }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetGoName(yname string) string {
    if yname == "cufwConnGlobalNumAttempted" { return "Cufwconnglobalnumattempted" }
    if yname == "cufwConnGlobalNumSetupsAborted" { return "Cufwconnglobalnumsetupsaborted" }
    if yname == "cufwConnGlobalNumPolicyDeclined" { return "Cufwconnglobalnumpolicydeclined" }
    if yname == "cufwConnGlobalNumResDeclined" { return "Cufwconnglobalnumresdeclined" }
    if yname == "cufwConnGlobalNumHalfOpen" { return "Cufwconnglobalnumhalfopen" }
    if yname == "cufwConnGlobalNumActive" { return "Cufwconnglobalnumactive" }
    if yname == "cufwConnGlobalNumExpired" { return "Cufwconnglobalnumexpired" }
    if yname == "cufwConnGlobalNumAborted" { return "Cufwconnglobalnumaborted" }
    if yname == "cufwConnGlobalNumEmbryonic" { return "Cufwconnglobalnumembryonic" }
    if yname == "cufwConnGlobalConnSetupRate1" { return "Cufwconnglobalconnsetuprate1" }
    if yname == "cufwConnGlobalConnSetupRate5" { return "Cufwconnglobalconnsetuprate5" }
    if yname == "cufwConnGlobalNumRemoteAccess" { return "Cufwconnglobalnumremoteaccess" }
    return ""
}

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetSegmentPath() string {
    return "cuFwConnectionGlobals"
}

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwConnGlobalNumAttempted"] = cufwconnectionglobals.Cufwconnglobalnumattempted
    leafs["cufwConnGlobalNumSetupsAborted"] = cufwconnectionglobals.Cufwconnglobalnumsetupsaborted
    leafs["cufwConnGlobalNumPolicyDeclined"] = cufwconnectionglobals.Cufwconnglobalnumpolicydeclined
    leafs["cufwConnGlobalNumResDeclined"] = cufwconnectionglobals.Cufwconnglobalnumresdeclined
    leafs["cufwConnGlobalNumHalfOpen"] = cufwconnectionglobals.Cufwconnglobalnumhalfopen
    leafs["cufwConnGlobalNumActive"] = cufwconnectionglobals.Cufwconnglobalnumactive
    leafs["cufwConnGlobalNumExpired"] = cufwconnectionglobals.Cufwconnglobalnumexpired
    leafs["cufwConnGlobalNumAborted"] = cufwconnectionglobals.Cufwconnglobalnumaborted
    leafs["cufwConnGlobalNumEmbryonic"] = cufwconnectionglobals.Cufwconnglobalnumembryonic
    leafs["cufwConnGlobalConnSetupRate1"] = cufwconnectionglobals.Cufwconnglobalconnsetuprate1
    leafs["cufwConnGlobalConnSetupRate5"] = cufwconnectionglobals.Cufwconnglobalconnsetuprate5
    leafs["cufwConnGlobalNumRemoteAccess"] = cufwconnectionglobals.Cufwconnglobalnumremoteaccess
    return leafs
}

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetBundleName() string { return "cisco_ios_xe" }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetYangName() string { return "cuFwConnectionGlobals" }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) SetParent(parent types.Entity) { cufwconnectionglobals.parent = parent }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetParent() types.Entity { return cufwconnectionglobals.parent }

func (cufwconnectionglobals *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionglobals) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources
type CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // The amount of memory occupied by all structures required to maintain the
    // state of all connections which are either being established or are active.
    // The type is interface{} with range: 0..4294967295. Units are KBytes.
    Cufwconnresmemoryusage interface{}

    // The amount of memory occupied by all structures required to maintain the
    // state of all active connections. The type is interface{} with range:
    // 0..4294967295. Units are KBytes.
    Cufwconnresactiveconnmemoryusage interface{}

    // The amount of memory occupied by all structures required to maintain the
    // state of all half open connections. The type is interface{} with range:
    // 0..4294967295. Units are KBytes.
    Cufwconnreshoconnmemoryusage interface{}

    // The amount of memory occupied by all structures required to maintain the
    // state of all embryonic connections. The type is interface{} with range:
    // 0..4294967295. Units are KBytes.
    Cufwconnresembrconnmemoryusage interface{}
}

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetFilter() yfilter.YFilter { return cufwconnectionresources.YFilter }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) SetFilter(yf yfilter.YFilter) { cufwconnectionresources.YFilter = yf }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetGoName(yname string) string {
    if yname == "cufwConnResMemoryUsage" { return "Cufwconnresmemoryusage" }
    if yname == "cufwConnResActiveConnMemoryUsage" { return "Cufwconnresactiveconnmemoryusage" }
    if yname == "cufwConnResHOConnMemoryUsage" { return "Cufwconnreshoconnmemoryusage" }
    if yname == "cufwConnResEmbrConnMemoryUsage" { return "Cufwconnresembrconnmemoryusage" }
    return ""
}

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetSegmentPath() string {
    return "cuFwConnectionResources"
}

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwConnResMemoryUsage"] = cufwconnectionresources.Cufwconnresmemoryusage
    leafs["cufwConnResActiveConnMemoryUsage"] = cufwconnectionresources.Cufwconnresactiveconnmemoryusage
    leafs["cufwConnResHOConnMemoryUsage"] = cufwconnectionresources.Cufwconnreshoconnmemoryusage
    leafs["cufwConnResEmbrConnMemoryUsage"] = cufwconnectionresources.Cufwconnresembrconnmemoryusage
    return leafs
}

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetBundleName() string { return "cisco_ios_xe" }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetYangName() string { return "cuFwConnectionResources" }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) SetParent(parent types.Entity) { cufwconnectionresources.parent = parent }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetParent() types.Entity { return cufwconnectionresources.parent }

func (cufwconnectionresources *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionresources) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings
type CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Setting this object to 'true' enables the MIB to report connection activity
    // statistics pertaining to application protocols.  If this object is set to
    // 'false', the agent should stop updating the objects defined in this module
    // pertaining to application protocols.  Application monitoring could be a
    // resource intensive operation. It is expected that the administrators  would
    // use this control to disable application  monitoring when the performance of
    // the firewall is  degrading. The type is bool.
    Cufwconnreptappstats interface{}

    // The time at which the value of cufwConnReptAppStats  was last changed. The
    // type is interface{} with range: 0..4294967295.
    Cufwconnreptappstatslastchanged interface{}
}

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetFilter() yfilter.YFilter { return cufwconnectionreportsettings.YFilter }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) SetFilter(yf yfilter.YFilter) { cufwconnectionreportsettings.YFilter = yf }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetGoName(yname string) string {
    if yname == "cufwConnReptAppStats" { return "Cufwconnreptappstats" }
    if yname == "cufwConnReptAppStatsLastChanged" { return "Cufwconnreptappstatslastchanged" }
    return ""
}

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetSegmentPath() string {
    return "cuFwConnectionReportSettings"
}

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwConnReptAppStats"] = cufwconnectionreportsettings.Cufwconnreptappstats
    leafs["cufwConnReptAppStatsLastChanged"] = cufwconnectionreportsettings.Cufwconnreptappstatslastchanged
    return leafs
}

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetBundleName() string { return "cisco_ios_xe" }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetYangName() string { return "cuFwConnectionReportSettings" }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) SetParent(parent types.Entity) { cufwconnectionreportsettings.parent = parent }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetParent() types.Entity { return cufwconnectionreportsettings.parent }

func (cufwconnectionreportsettings *CISCOUNIFIEDFIREWALLMIB_Cufwconnectionreportsettings) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp
type CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // The value identifies if audit trail in application  inspection has been
    // globally enabled or disabled. The type is bool.
    Cufwaiaudittrailenabled interface{}

    // The value identifies if application inspection alerts have been globally
    // enabled or disabled. The type is bool.
    Cufwaialertenabled interface{}
}

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetFilter() yfilter.YFilter { return cufwapplinspectiongrp.YFilter }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) SetFilter(yf yfilter.YFilter) { cufwapplinspectiongrp.YFilter = yf }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetGoName(yname string) string {
    if yname == "cufwAIAuditTrailEnabled" { return "Cufwaiaudittrailenabled" }
    if yname == "cufwAIAlertEnabled" { return "Cufwaialertenabled" }
    return ""
}

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetSegmentPath() string {
    return "cuFwApplInspectionGrp"
}

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwAIAuditTrailEnabled"] = cufwapplinspectiongrp.Cufwaiaudittrailenabled
    leafs["cufwAIAlertEnabled"] = cufwapplinspectiongrp.Cufwaialertenabled
    return leafs
}

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetBundleName() string { return "cisco_ios_xe" }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetYangName() string { return "cuFwApplInspectionGrp" }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) SetParent(parent types.Entity) { cufwapplinspectiongrp.parent = parent }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetParent() types.Entity { return cufwapplinspectiongrp.parent }

func (cufwapplinspectiongrp *CISCOUNIFIEDFIREWALLMIB_Cufwapplinspectiongrp) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals
type CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // URL Filtering Operation                                  _________         
    // 2.2 Request   |         |                    |---------->| Server  |       
    // |           |         | _________                      __|_         
    // |_________| |         |<--(5. Response )---|    | 3. Response  |   |       
    // |                    |    |<-------------|  | Client  |---(1. Request
    // )--->|FW  | |_________|                    |____|<--------------|          
    // | 4. URLF Resp ____|______                   |             |           |   
    // |------------>|URLF Server|                  2.1 URLF Req   |___________| 
    // 1)  Client sends a Request containing a URL to the Server  2.1)  FW
    // extracts the URL from the Request and sends it to  URL Filtering Server (or
    // Verifies the URL locally)  2.2)  FW also forwards the original Request from
    // the Client to  the Server  3)  Any Responses from the Server received
    // before receiving a response from URLF Server are cached by the FW  4)  URLF
    // Response indicates whether the URL access should be  allowed or denied  5) 
    // If the URLF Response allows the URL, FW forwards the URL Access responses
    // from the Server to the Client  6)  If the URLF Response indicates that the
    // URL access should be denied, FW drops all the cached URL responses and
    // forces the connection between the Client and the Server to be terminated 
    // Specifically, the object cufwUrlfFunctionEnabled  indicates if the URL
    // filtering function is enabled.  When this MIB object contains the value
    // 'false', the firewall device will not perform URL filtering function, even
    // if it contains configuration pertaining to other aspects of URL filtering.
    // The type is interface{} with range: 0..2.
    Cufwurlffunctionenabled interface{}

    // The number of URL access requests processed by  this firewall.  This value
    // is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are Requests.
    Cufwurlfrequestsnumprocessed interface{}

    // The number of URL access requests processed per  seconds by this firewall
    // averaged over the last 60  seconds. The type is interface{} with range:
    // 0..4294967295. Units are Requests per second.
    Cufwurlfrequestsprocrate1 interface{}

    // The number of URL access requests processed per second by this firewall
    // averaged over the last 300 seconds. The type is interface{} with range:
    // 0..4294967295. Units are Requests per second.
    Cufwurlfrequestsprocrate5 interface{}

    // The number of URL access requests allowed by this firewall, due to a
    // directive from a URL  filtering server or a static policy configured on 
    // the firewall.  This value is accumulated from the last reboot of the
    // firewall. The type is interface{} with range: 0..18446744073709551615.
    // Units are Requests.
    Cufwurlfrequestsnumallowed interface{}

    // The number of URL access requests declined by this firewall, due to a
    // directive from a URL  filtering server, a static policy configured on  the
    // firewall, due to resource constraints or any other reason.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are Requests.
    Cufwurlfrequestsnumdenied interface{}

    // The rate at which URL access requests were denied by this firewall, due to
    // a directive from a URL  filtering server, a static policy configured on 
    // the firewall, due to resource constraints or any other reason, averaged
    // over the last 60 seconds. The type is interface{} with range:
    // 0..4294967295. Units are Requests per second.
    Cufwurlfrequestsdeniedrate1 interface{}

    // The rate at which URL access requests were denied by this firewall, due to
    // a directive from a URL  filtering server, a static policy configured on 
    // the firewall, due to resource constraints or any other reason, averaged
    // over the last 300 seconds. The type is interface{} with range:
    // 0..4294967295. Units are Requests Per Second.
    Cufwurlfrequestsdeniedrate5 interface{}

    // The number of URL access requests allowed by the firewall because of a
    // cached entry holding the result from a previous URL access request that was
    // handled either by a URLF Server or exclusive domain configuration.   This
    // value is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are Requests.
    Cufwurlfrequestsnumcacheallowed interface{}

    // The number of URL access requests denied by the firewall because of a
    // cached entry holding the result from a previous URL access request that was
    // handled either by a URLF Server or exclusive domain configuration.   This
    // value is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are Requests.
    Cufwurlfrequestsnumcachedenied interface{}

    // The number of URL access requests that were allowed by the firewall when
    // the URL filtering server was not available.  This value is accumulated from
    // the last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Requests.
    Cufwurlfallowmodereqnumallowed interface{}

    // The number of URL access requests that were declined by the firewall when
    // the URL filtering server was not available.  This value is accumulated from
    // the last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Requests.
    Cufwurlfallowmodereqnumdenied interface{}

    // The number of incoming URL access requests that were dropped by the
    // firewall because of resource constraints.  This value is accumulated from
    // the last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Requests.
    Cufwurlfrequestsnumresdropped interface{}

    // The rate at which incoming URL access requests  were dropped by the
    // firewall because of resource constraints, averaged over the last 60
    // seconds. The type is interface{} with range: 0..4294967295. Units are
    // Requests Per Second.
    Cufwurlfrequestsresdroprate1 interface{}

    // The rate at which incoming URL access requests  were dropped by the
    // firewall because of resource constraints, averaged over the last 300
    // seconds. The type is interface{} with range: 0..4294967295. Units are
    // Requests Per Second.
    Cufwurlfrequestsresdroprate5 interface{}

    // The number of times the firewall failed to receive a response from the
    // configured URL filtering servers  for a request to authorize a URL access
    // request.  This is equal to the number of times a firewall removed a URL
    // access request from the queue of pending requests because no response was
    // received from the URL filtering server(s).  This value is accumulated from
    // the last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615.
    Cufwurlfnumservertimeouts interface{}

    // The number of URL access authorization requests  re-sent by the firewall to
    // the URL Filtering Servers  because a response was not received within the 
    // configured time interval.  This value is accumulated from the last reboot
    // of the firewall. The type is interface{} with range:
    // 0..18446744073709551615.
    Cufwurlfnumserverretries interface{}

    // The number of responses from URL filtering servers which were received
    // after the original URL access request was removed from the queue of pending
    // requests.  This value is accumulated from the last reboot of the firewall.
    // The type is interface{} with range: 0..18446744073709551615. Units are
    // Responses.
    Cufwurlfresponsesnumlate interface{}

    // The number of transport packets constituting responses to URL access
    // requests that were dropped by the firewall due to resource constraints
    // waiting for a response from the filtering server.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are Responses.
    Cufwurlfurlaccrespsnumresdropped interface{}
}

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetFilter() yfilter.YFilter { return cufwurlfilterglobals.YFilter }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) SetFilter(yf yfilter.YFilter) { cufwurlfilterglobals.YFilter = yf }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetGoName(yname string) string {
    if yname == "cufwUrlfFunctionEnabled" { return "Cufwurlffunctionenabled" }
    if yname == "cufwUrlfRequestsNumProcessed" { return "Cufwurlfrequestsnumprocessed" }
    if yname == "cufwUrlfRequestsProcRate1" { return "Cufwurlfrequestsprocrate1" }
    if yname == "cufwUrlfRequestsProcRate5" { return "Cufwurlfrequestsprocrate5" }
    if yname == "cufwUrlfRequestsNumAllowed" { return "Cufwurlfrequestsnumallowed" }
    if yname == "cufwUrlfRequestsNumDenied" { return "Cufwurlfrequestsnumdenied" }
    if yname == "cufwUrlfRequestsDeniedRate1" { return "Cufwurlfrequestsdeniedrate1" }
    if yname == "cufwUrlfRequestsDeniedRate5" { return "Cufwurlfrequestsdeniedrate5" }
    if yname == "cufwUrlfRequestsNumCacheAllowed" { return "Cufwurlfrequestsnumcacheallowed" }
    if yname == "cufwUrlfRequestsNumCacheDenied" { return "Cufwurlfrequestsnumcachedenied" }
    if yname == "cufwUrlfAllowModeReqNumAllowed" { return "Cufwurlfallowmodereqnumallowed" }
    if yname == "cufwUrlfAllowModeReqNumDenied" { return "Cufwurlfallowmodereqnumdenied" }
    if yname == "cufwUrlfRequestsNumResDropped" { return "Cufwurlfrequestsnumresdropped" }
    if yname == "cufwUrlfRequestsResDropRate1" { return "Cufwurlfrequestsresdroprate1" }
    if yname == "cufwUrlfRequestsResDropRate5" { return "Cufwurlfrequestsresdroprate5" }
    if yname == "cufwUrlfNumServerTimeouts" { return "Cufwurlfnumservertimeouts" }
    if yname == "cufwUrlfNumServerRetries" { return "Cufwurlfnumserverretries" }
    if yname == "cufwUrlfResponsesNumLate" { return "Cufwurlfresponsesnumlate" }
    if yname == "cufwUrlfUrlAccRespsNumResDropped" { return "Cufwurlfurlaccrespsnumresdropped" }
    return ""
}

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetSegmentPath() string {
    return "cufwUrlFilterGlobals"
}

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwUrlfFunctionEnabled"] = cufwurlfilterglobals.Cufwurlffunctionenabled
    leafs["cufwUrlfRequestsNumProcessed"] = cufwurlfilterglobals.Cufwurlfrequestsnumprocessed
    leafs["cufwUrlfRequestsProcRate1"] = cufwurlfilterglobals.Cufwurlfrequestsprocrate1
    leafs["cufwUrlfRequestsProcRate5"] = cufwurlfilterglobals.Cufwurlfrequestsprocrate5
    leafs["cufwUrlfRequestsNumAllowed"] = cufwurlfilterglobals.Cufwurlfrequestsnumallowed
    leafs["cufwUrlfRequestsNumDenied"] = cufwurlfilterglobals.Cufwurlfrequestsnumdenied
    leafs["cufwUrlfRequestsDeniedRate1"] = cufwurlfilterglobals.Cufwurlfrequestsdeniedrate1
    leafs["cufwUrlfRequestsDeniedRate5"] = cufwurlfilterglobals.Cufwurlfrequestsdeniedrate5
    leafs["cufwUrlfRequestsNumCacheAllowed"] = cufwurlfilterglobals.Cufwurlfrequestsnumcacheallowed
    leafs["cufwUrlfRequestsNumCacheDenied"] = cufwurlfilterglobals.Cufwurlfrequestsnumcachedenied
    leafs["cufwUrlfAllowModeReqNumAllowed"] = cufwurlfilterglobals.Cufwurlfallowmodereqnumallowed
    leafs["cufwUrlfAllowModeReqNumDenied"] = cufwurlfilterglobals.Cufwurlfallowmodereqnumdenied
    leafs["cufwUrlfRequestsNumResDropped"] = cufwurlfilterglobals.Cufwurlfrequestsnumresdropped
    leafs["cufwUrlfRequestsResDropRate1"] = cufwurlfilterglobals.Cufwurlfrequestsresdroprate1
    leafs["cufwUrlfRequestsResDropRate5"] = cufwurlfilterglobals.Cufwurlfrequestsresdroprate5
    leafs["cufwUrlfNumServerTimeouts"] = cufwurlfilterglobals.Cufwurlfnumservertimeouts
    leafs["cufwUrlfNumServerRetries"] = cufwurlfilterglobals.Cufwurlfnumserverretries
    leafs["cufwUrlfResponsesNumLate"] = cufwurlfilterglobals.Cufwurlfresponsesnumlate
    leafs["cufwUrlfUrlAccRespsNumResDropped"] = cufwurlfilterglobals.Cufwurlfurlaccrespsnumresdropped
    return leafs
}

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetBundleName() string { return "cisco_ios_xe" }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetYangName() string { return "cufwUrlFilterGlobals" }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) SetParent(parent types.Entity) { cufwurlfilterglobals.parent = parent }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetParent() types.Entity { return cufwurlfilterglobals.parent }

func (cufwurlfilterglobals *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterglobals) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage
type CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // The amount of memory occupied by all the caches used in the firewall to
    // cache pending URL access requests. The type is interface{} with range:
    // 0..4294967295. Units are KBytes.
    Cufwurlfrestotalrequestcachesize interface{}

    // The amount of memory occupied by all the caches used in the firewall to
    // cache responses for URL  requests received from servers while awaiting a
    // response from URL filter server. The type is interface{} with range:
    // 0..4294967295. Units are KBytes.
    Cufwurlfrestotalrespcachesize interface{}
}

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetFilter() yfilter.YFilter { return cufwurlfilterresourceusage.YFilter }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) SetFilter(yf yfilter.YFilter) { cufwurlfilterresourceusage.YFilter = yf }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetGoName(yname string) string {
    if yname == "cufwUrlfResTotalRequestCacheSize" { return "Cufwurlfrestotalrequestcachesize" }
    if yname == "cufwUrlfResTotalRespCacheSize" { return "Cufwurlfrestotalrespcachesize" }
    return ""
}

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetSegmentPath() string {
    return "cufwUrlFilterResourceUsage"
}

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwUrlfResTotalRequestCacheSize"] = cufwurlfilterresourceusage.Cufwurlfrestotalrequestcachesize
    leafs["cufwUrlfResTotalRespCacheSize"] = cufwurlfilterresourceusage.Cufwurlfrestotalrespcachesize
    return leafs
}

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetBundleName() string { return "cisco_ios_xe" }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetYangName() string { return "cufwUrlFilterResourceUsage" }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) SetParent(parent types.Entity) { cufwurlfilterresourceusage.parent = parent }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetParent() types.Entity { return cufwurlfilterresourceusage.parent }

func (cufwurlfilterresourceusage *CISCOUNIFIEDFIREWALLMIB_Cufwurlfilterresourceusage) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals
type CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // 'Protocol Operation' is the application protocol specific operation that
    // the PDU is intended to  perform. An example of 'protocol operation' is the 
    // HELO command of SMTP protocol.  This MIB object records the number of
    // application  protocol data units that contained a protocol operation which
    // was disallowed by the local security policy.   For this MIB to be
    // implemented, the managed firewall  must be implementing deep packet
    // inspection of  application traffic payloads.  This value is accumulated
    // from the last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Protocol Data Units.
    Cufwaaicglobalnumbadprotocolops interface{}

    // This MIB object records the number of application  protocol data units
    // (PDU) that had either an invalid header size or an invalid payload size, as
    // determined  by the local security policy.  For this MIB to be implemented,
    // the managed firewall  must be implementing deep packet inspection of 
    // application traffic payloads.  This value is accumulated from the last
    // reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Protocol Data Units.
    Cufwaaicglobalnumbadpdusize interface{}

    // Number of application protocol units that attempted  to advertise illegal
    // port ranges for secondary  connections. An example of such an occurrence
    // would be a passive FTP connection, where the  server advertises a
    // disallowed port range for data connection.  For this MIB to be implemented,
    // the managed firewall  must be implementing deep packet inspection of 
    // application traffic payloads.  This value is accumulated from the last
    // reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Protocol Data Units.
    Cufwaaicglobalnumbadportrange interface{}
}

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetFilter() yfilter.YFilter { return cufwaaicglobals.YFilter }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) SetFilter(yf yfilter.YFilter) { cufwaaicglobals.YFilter = yf }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetGoName(yname string) string {
    if yname == "cufwAaicGlobalNumBadProtocolOps" { return "Cufwaaicglobalnumbadprotocolops" }
    if yname == "cufwAaicGlobalNumBadPDUSize" { return "Cufwaaicglobalnumbadpdusize" }
    if yname == "cufwAaicGlobalNumBadPortRange" { return "Cufwaaicglobalnumbadportrange" }
    return ""
}

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetSegmentPath() string {
    return "cufwAaicGlobals"
}

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwAaicGlobalNumBadProtocolOps"] = cufwaaicglobals.Cufwaaicglobalnumbadprotocolops
    leafs["cufwAaicGlobalNumBadPDUSize"] = cufwaaicglobals.Cufwaaicglobalnumbadpdusize
    leafs["cufwAaicGlobalNumBadPortRange"] = cufwaaicglobals.Cufwaaicglobalnumbadportrange
    return leafs
}

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetBundleName() string { return "cisco_ios_xe" }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetYangName() string { return "cufwAaicGlobals" }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) SetParent(parent types.Entity) { cufwaaicglobals.parent = parent }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetParent() types.Entity { return cufwaaicglobals.parent }

func (cufwaaicglobals *CISCOUNIFIEDFIREWALLMIB_Cufwaaicglobals) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats
type CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // The number of PDUs corresponding to HTTP protocol  which were detected to
    // be containing HTTP protocol methods which are disallowed by the local
    // security  policy.  For this MIB to be implemented, the managed firewall 
    // must be implementing deep packet inspection of  HTTP traffic payloads. 
    // This value is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are HTTP Protocol
    // Data Units.
    Cufwaaichttpnumbadprotocolops interface{}

    // The number of PDUs corresponding to HTTP protocol  that had either an
    // invalid header size or an invalid  payload size, as determined by the local
    // security policy.  For this MIB to be implemented, the managed firewall 
    // must be implementing deep packet inspection of  HTTP traffic payloads. 
    // This value is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are HTTP Protocol
    // Data Units.
    Cufwaaichttpnumbadpdusize interface{}

    // The number of connections corresponding to HTTP protocol which were
    // detected to be tunneling other  application traffic streams. An instance of
    // this  would be InstantMessenger traffic running on HTTP.  For this MIB to
    // be implemented, the managed firewall  must be implementing deep packet
    // inspection of  HTTP traffic payloads.  This value is accumulated from the
    // last reboot of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwaaichttpnumtunneledconns interface{}

    // The number of PDUs corresponding to HTTP protocol  which were detected to
    // be containing a URI of size not permitted by the local security policy. 
    // For this MIB to be implemented, the managed firewall  must be implementing
    // deep packet inspection of  HTTP traffic payloads.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are HTTP Protocol Data Units.
    Cufwaaichttpnumlargeuris interface{}

    // The number of PDUs corresponding to HTTP protocol  which were detected to
    // be containing content whose type disallowed by the local security policy. 
    // For this MIB to be implemented, the managed firewall  must be implementing
    // deep packet inspection of  HTTP traffic payloads.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are HTTP Protocol Data Units.
    Cufwaaichttpnumbadcontent interface{}

    // The number of PDUs corresponding to HTTP protocol  which were detected to
    // be containing content whose type was different from the content type
    // specified  in the header of the PDU.  For this MIB to be implemented, the
    // managed firewall  must be implementing deep packet inspection of  HTTP
    // traffic payloads.  This value is accumulated from the last reboot of the
    // firewall. The type is interface{} with range: 0..18446744073709551615.
    // Units are HTTP Protocol Data Units.
    Cufwaaichttpnummismatchcontent interface{}

    // The number of PDUs corresponding to HTTP protocol  which were detected to
    // be containing double encoding. Double encoding is a mechanism to obfuscate
    // content  in which a encoded data is re-encoded so as to evade  deep packet
    // inspections.  For this MIB to be implemented, the managed firewall  must be
    // implementing deep packet inspection of  HTTP traffic payloads.  This value
    // is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are HTTP Protocol
    // Data Units.
    Cufwaaichttpnumdoubleencodedpkts interface{}
}

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetFilter() yfilter.YFilter { return cufwaaichttpprotocolstats.YFilter }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) SetFilter(yf yfilter.YFilter) { cufwaaichttpprotocolstats.YFilter = yf }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetGoName(yname string) string {
    if yname == "cufwAaicHttpNumBadProtocolOps" { return "Cufwaaichttpnumbadprotocolops" }
    if yname == "cufwAaicHttpNumBadPDUSize" { return "Cufwaaichttpnumbadpdusize" }
    if yname == "cufwAaicHttpNumTunneledConns" { return "Cufwaaichttpnumtunneledconns" }
    if yname == "cufwAaicHttpNumLargeURIs" { return "Cufwaaichttpnumlargeuris" }
    if yname == "cufwAaicHttpNumBadContent" { return "Cufwaaichttpnumbadcontent" }
    if yname == "cufwAaicHttpNumMismatchContent" { return "Cufwaaichttpnummismatchcontent" }
    if yname == "cufwAaicHttpNumDoubleEncodedPkts" { return "Cufwaaichttpnumdoubleencodedpkts" }
    return ""
}

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetSegmentPath() string {
    return "cufwAaicHttpProtocolStats"
}

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwAaicHttpNumBadProtocolOps"] = cufwaaichttpprotocolstats.Cufwaaichttpnumbadprotocolops
    leafs["cufwAaicHttpNumBadPDUSize"] = cufwaaichttpprotocolstats.Cufwaaichttpnumbadpdusize
    leafs["cufwAaicHttpNumTunneledConns"] = cufwaaichttpprotocolstats.Cufwaaichttpnumtunneledconns
    leafs["cufwAaicHttpNumLargeURIs"] = cufwaaichttpprotocolstats.Cufwaaichttpnumlargeuris
    leafs["cufwAaicHttpNumBadContent"] = cufwaaichttpprotocolstats.Cufwaaichttpnumbadcontent
    leafs["cufwAaicHttpNumMismatchContent"] = cufwaaichttpprotocolstats.Cufwaaichttpnummismatchcontent
    leafs["cufwAaicHttpNumDoubleEncodedPkts"] = cufwaaichttpprotocolstats.Cufwaaichttpnumdoubleencodedpkts
    return leafs
}

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetBundleName() string { return "cisco_ios_xe" }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetYangName() string { return "cufwAaicHttpProtocolStats" }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) SetParent(parent types.Entity) { cufwaaichttpprotocolstats.parent = parent }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetParent() types.Entity { return cufwaaichttpprotocolstats.parent }

func (cufwaaichttpprotocolstats *CISCOUNIFIEDFIREWALLMIB_Cufwaaichttpprotocolstats) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals
type CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // The value indicates if the firewall is operating in transparent (layer 2)
    // mode or not.  When operating in transparent mode, the firewall operates as
    // a bridge while performing firewalling functions. The type is bool.
    Cufwl2Globalenablestealthmode interface{}

    // The value indicates the configured maximum size of the ARP cache used for
    // management traffic. The type is interface{} with range: 1..2147483647.
    // Units are ARP entries.
    Cufwl2Globalarpcachesize interface{}

    // The value indicates if ARP inspection, which is a security feature, is
    // enabled globally on the managed firewall. The type is bool.
    Cufwl2Globalenablearpinspection interface{}

    // The number of ARP requests issued by the transparent firewall to resolve a
    // destination IP address.  This counter is accumulated since the last reboot
    // of  the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are ARP Requests.
    Cufwl2Globalnumarprequests interface{}

    // The number of ICMP traceroute requests issued by the  transparent firewall
    // to resolve a destination IP  address.  This counter is accumulated since
    // the last reboot of  the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are ICMP Traceroute Requests.
    Cufwl2Globalnumicmprequests interface{}

    // The number of times the firewall floods a frame to be  forwarded to the
    // egress interfaces because the  destination MAC address is missing in the
    // bridge table.  This counter is accumulated since the last reboot of  the
    // firewall. The type is interface{} with range: 0..18446744073709551615.
    Cufwl2Globalnumfloods interface{}

    // The number of times the firewall dropped an incoming frame because the
    // destination MAC address is missing  in the bridge table.  This counter is
    // accumulated since the last reboot of  the firewall. The type is interface{}
    // with range: 0..18446744073709551615.
    Cufwl2Globalnumdrops interface{}

    // The number of times an existing entry from the ARP cache had to be ejected
    // in order to insert a new entry in the last 300 seconds.  This counter is
    // accumulated since the last reboot of  the firewall. The type is interface{}
    // with range: 0..4294967295.
    Cufwl2Globalarpoverflowrate5 interface{}

    // The number of malformed ARP responses received by the firewall in trying to
    // resolve the MAC address of the destination IP address in an incoming frame.
    // This counter is accumulated since the last reboot of  the firewall. The
    // type is interface{} with range: 0..18446744073709551615. Units are ARP
    // Responses.
    Cufwl2Globalnumbadarpresponses interface{}

    // The number of spoofed ARP responses received by the firewall. Such an event
    // would occur when the firewall encounters an ARP response mapping an IP
    // address to a different MAC Address from the one present in the local ARP
    // cache.  This counter is accumulated since the last reboot of  the firewall.
    // The type is interface{} with range: 0..18446744073709551615. Units are ARP
    // Responses.
    Cufwl2Globalnumspoofedarpresps interface{}
}

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetFilter() yfilter.YFilter { return cufwl2Fwglobals.YFilter }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) SetFilter(yf yfilter.YFilter) { cufwl2Fwglobals.YFilter = yf }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetGoName(yname string) string {
    if yname == "cufwL2GlobalEnableStealthMode" { return "Cufwl2Globalenablestealthmode" }
    if yname == "cufwL2GlobalArpCacheSize" { return "Cufwl2Globalarpcachesize" }
    if yname == "cufwL2GlobalEnableArpInspection" { return "Cufwl2Globalenablearpinspection" }
    if yname == "cufwL2GlobalNumArpRequests" { return "Cufwl2Globalnumarprequests" }
    if yname == "cufwL2GlobalNumIcmpRequests" { return "Cufwl2Globalnumicmprequests" }
    if yname == "cufwL2GlobalNumFloods" { return "Cufwl2Globalnumfloods" }
    if yname == "cufwL2GlobalNumDrops" { return "Cufwl2Globalnumdrops" }
    if yname == "cufwL2GlobalArpOverflowRate5" { return "Cufwl2Globalarpoverflowrate5" }
    if yname == "cufwL2GlobalNumBadArpResponses" { return "Cufwl2Globalnumbadarpresponses" }
    if yname == "cufwL2GlobalNumSpoofedArpResps" { return "Cufwl2Globalnumspoofedarpresps" }
    return ""
}

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetSegmentPath() string {
    return "cufwL2FwGlobals"
}

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwL2GlobalEnableStealthMode"] = cufwl2Fwglobals.Cufwl2Globalenablestealthmode
    leafs["cufwL2GlobalArpCacheSize"] = cufwl2Fwglobals.Cufwl2Globalarpcachesize
    leafs["cufwL2GlobalEnableArpInspection"] = cufwl2Fwglobals.Cufwl2Globalenablearpinspection
    leafs["cufwL2GlobalNumArpRequests"] = cufwl2Fwglobals.Cufwl2Globalnumarprequests
    leafs["cufwL2GlobalNumIcmpRequests"] = cufwl2Fwglobals.Cufwl2Globalnumicmprequests
    leafs["cufwL2GlobalNumFloods"] = cufwl2Fwglobals.Cufwl2Globalnumfloods
    leafs["cufwL2GlobalNumDrops"] = cufwl2Fwglobals.Cufwl2Globalnumdrops
    leafs["cufwL2GlobalArpOverflowRate5"] = cufwl2Fwglobals.Cufwl2Globalarpoverflowrate5
    leafs["cufwL2GlobalNumBadArpResponses"] = cufwl2Fwglobals.Cufwl2Globalnumbadarpresponses
    leafs["cufwL2GlobalNumSpoofedArpResps"] = cufwl2Fwglobals.Cufwl2Globalnumspoofedarpresps
    return leafs
}

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetBundleName() string { return "cisco_ios_xe" }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetYangName() string { return "cufwL2FwGlobals" }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) SetParent(parent types.Entity) { cufwl2Fwglobals.parent = parent }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetParent() types.Entity { return cufwl2Fwglobals.parent }

func (cufwl2Fwglobals *CISCOUNIFIEDFIREWALLMIB_Cufwl2Fwglobals) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp
type CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This object defines the administrative state of sending the SNMP
    // notification to signal the election of a new primary URL filtering server
    // by this firewall.  Such a change could occur either as a result of  the
    // current primary server becoming unavailable or as a result of explicit
    // management action in  nominating a filtering server the primary server. The
    // type is bool.
    Cufwcntlurlfserverstatuschange interface{}

    // This object defines the administrative state of sending the SNMP
    // notification to signal the move of a statically configured MAC address to a
    // new  port.  Such a change could occur either as a result of physical move
    // of the device with the MAC Address to the new port or due to MAC address
    // spoofing. The type is bool.
    Cufwcntll2Staticmacaddressmoved interface{}
}

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetFilter() yfilter.YFilter { return cufwnotifcntlgrp.YFilter }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) SetFilter(yf yfilter.YFilter) { cufwnotifcntlgrp.YFilter = yf }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetGoName(yname string) string {
    if yname == "cufwCntlUrlfServerStatusChange" { return "Cufwcntlurlfserverstatuschange" }
    if yname == "cufwCntlL2StaticMacAddressMoved" { return "Cufwcntll2Staticmacaddressmoved" }
    return ""
}

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetSegmentPath() string {
    return "cuFwNotifCntlGrp"
}

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwCntlUrlfServerStatusChange"] = cufwnotifcntlgrp.Cufwcntlurlfserverstatuschange
    leafs["cufwCntlL2StaticMacAddressMoved"] = cufwnotifcntlgrp.Cufwcntll2Staticmacaddressmoved
    return leafs
}

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetBundleName() string { return "cisco_ios_xe" }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetYangName() string { return "cuFwNotifCntlGrp" }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) SetParent(parent types.Entity) { cufwnotifcntlgrp.parent = parent }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetParent() types.Entity { return cufwnotifcntlgrp.parent }

func (cufwnotifcntlgrp *CISCOUNIFIEDFIREWALLMIB_Cufwnotifcntlgrp) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable
// This table summarizes the connection activity on
// the firewall per layer3-layer 4 protocol instance.
// 
// Each entry in the table lists the connection
// summary of a distinct network protocol.
// 
// For instance, the conceptual row corresponding to the
// index
// 
//      cufwConnProtocol = fwpTcp
// 
// yields the summary of TCP connection activity on the 
// firewall since its reboot.
type CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Each entry contains the summary of connection activity for a layer3-layer4
    // network protocol. The type is slice of
    // CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry.
    Cufwconnsummaryentry []CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry
}

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetFilter() yfilter.YFilter { return cufwconnsummarytable.YFilter }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) SetFilter(yf yfilter.YFilter) { cufwconnsummarytable.YFilter = yf }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetGoName(yname string) string {
    if yname == "cufwConnSummaryEntry" { return "Cufwconnsummaryentry" }
    return ""
}

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetSegmentPath() string {
    return "cufwConnSummaryTable"
}

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cufwConnSummaryEntry" {
        for _, c := range cufwconnsummarytable.Cufwconnsummaryentry {
            if cufwconnsummarytable.GetSegmentPath() == segmentPath {
                return &c
            }
        }
        child := CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry{}
        cufwconnsummarytable.Cufwconnsummaryentry = append(cufwconnsummarytable.Cufwconnsummaryentry, child)
        return &cufwconnsummarytable.Cufwconnsummaryentry[len(cufwconnsummarytable.Cufwconnsummaryentry)-1]
    }
    return nil
}

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    for i := range cufwconnsummarytable.Cufwconnsummaryentry {
        children[cufwconnsummarytable.Cufwconnsummaryentry[i].GetSegmentPath()] = &cufwconnsummarytable.Cufwconnsummaryentry[i]
    }
    return children
}

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetBundleName() string { return "cisco_ios_xe" }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetYangName() string { return "cufwConnSummaryTable" }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) SetParent(parent types.Entity) { cufwconnsummarytable.parent = parent }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetParent() types.Entity { return cufwconnsummarytable.parent }

func (cufwconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry
// Each entry contains the summary of connection
// activity for a layer3-layer4 network protocol.
type CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This attribute is a key. The (L3-L4) protocol for which this conceptual 
    // row summarizes the connection activity on the managed entity. The type is
    // CFWNetworkProtocol.
    Cufwconnprotocol interface{}

    // The number of connections attempted since the last reboot of the firewall,
    // corresponding to the protocol denoted by 'cufwConnProtocol'.  This value is
    // accumulated from the last reboot of the firewall. The type is interface{}
    // with range: 0..18446744073709551615. Units are Connections.
    Cufwconnnumattempted interface{}

    // The number of connection setup attempts, corresponding to the protocol
    // denoted by  'cufwConnProtocol', that were aborted before the  connection
    // could proceed to completion. The  counter includes setup attempts aborted
    // by the  firewall as well as those aborted by the initiator  and/or the
    // responder(s) of/to the connection setup  attempt.  Consequently, this value
    // subsumes the values of objects 'cufwConnNumPolicyDeclined' and 
    // 'cufwConnNumResDeclined'.  This value is accumulated from the last reboot
    // of the firewall. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwconnnumsetupsaborted interface{}

    // The number of connection attempts that were declined due to security
    // policy, corresponding to the protocol  denoted by 'cufwConnProtocol'.  This
    // value is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615. Units are Connections.
    Cufwconnnumpolicydeclined interface{}

    // The number of connection attempts that were declined due to resource
    // unavailability, corresponding to the  protocol denoted by
    // 'cufwConnProtocol'.  This value is accumulated from the last reboot of the
    // firewall. The type is interface{} with range: 0..18446744073709551615.
    // Units are Connections.
    Cufwconnnumresdeclined interface{}

    // The number of connections that are currently in the process of being
    // established, corresponding to the  protocol denoted by 'cufwConnProtocol'.
    // The type is interface{} with range: 0..4294967295. Units are Connections.
    Cufwconnnumhalfopen interface{}

    // The number of connections that are currently active, corresponding to the
    // protocol denoted by  'cufwConnProtocol'. The type is interface{} with
    // range: 0..4294967295. Units are Connections.
    Cufwconnnumactive interface{}

    // The number of connections that were abnormally  terminated after successful
    // establishment,  corresponding to the protocol denoted by 
    // 'cufwConnProtocol'.  This value is accumulated from the last reboot of the
    // firewall. The type is interface{} with range: 0..18446744073709551615.
    // Units are Connections.
    Cufwconnnumaborted interface{}

    // The connection setup rate averaged over the last 60 seconds corresponding
    // to the protocol denoted by  'cufwConnProtocol'. The type is interface{}
    // with range: 0..4294967295. Units are Connections Per Second.
    Cufwconnsetuprate1 interface{}

    // The connection setup rate averaged over the last 300 seconds corresponding
    // to the protocol denoted by  'cufwConnProtocol'. The type is interface{}
    // with range: 0..4294967295. Units are Connections Per Second.
    Cufwconnsetuprate5 interface{}
}

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetFilter() yfilter.YFilter { return cufwconnsummaryentry.YFilter }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) SetFilter(yf yfilter.YFilter) { cufwconnsummaryentry.YFilter = yf }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetGoName(yname string) string {
    if yname == "cufwConnProtocol" { return "Cufwconnprotocol" }
    if yname == "cufwConnNumAttempted" { return "Cufwconnnumattempted" }
    if yname == "cufwConnNumSetupsAborted" { return "Cufwconnnumsetupsaborted" }
    if yname == "cufwConnNumPolicyDeclined" { return "Cufwconnnumpolicydeclined" }
    if yname == "cufwConnNumResDeclined" { return "Cufwconnnumresdeclined" }
    if yname == "cufwConnNumHalfOpen" { return "Cufwconnnumhalfopen" }
    if yname == "cufwConnNumActive" { return "Cufwconnnumactive" }
    if yname == "cufwConnNumAborted" { return "Cufwconnnumaborted" }
    if yname == "cufwConnSetupRate1" { return "Cufwconnsetuprate1" }
    if yname == "cufwConnSetupRate5" { return "Cufwconnsetuprate5" }
    return ""
}

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetSegmentPath() string {
    return "cufwConnSummaryEntry" + "[cufwConnProtocol='" + fmt.Sprintf("%v", cufwconnsummaryentry.Cufwconnprotocol) + "']"
}

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwConnProtocol"] = cufwconnsummaryentry.Cufwconnprotocol
    leafs["cufwConnNumAttempted"] = cufwconnsummaryentry.Cufwconnnumattempted
    leafs["cufwConnNumSetupsAborted"] = cufwconnsummaryentry.Cufwconnnumsetupsaborted
    leafs["cufwConnNumPolicyDeclined"] = cufwconnsummaryentry.Cufwconnnumpolicydeclined
    leafs["cufwConnNumResDeclined"] = cufwconnsummaryentry.Cufwconnnumresdeclined
    leafs["cufwConnNumHalfOpen"] = cufwconnsummaryentry.Cufwconnnumhalfopen
    leafs["cufwConnNumActive"] = cufwconnsummaryentry.Cufwconnnumactive
    leafs["cufwConnNumAborted"] = cufwconnsummaryentry.Cufwconnnumaborted
    leafs["cufwConnSetupRate1"] = cufwconnsummaryentry.Cufwconnsetuprate1
    leafs["cufwConnSetupRate5"] = cufwconnsummaryentry.Cufwconnsetuprate5
    return leafs
}

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetBundleName() string { return "cisco_ios_xe" }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetYangName() string { return "cufwConnSummaryEntry" }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) SetParent(parent types.Entity) { cufwconnsummaryentry.parent = parent }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetParent() types.Entity { return cufwconnsummaryentry.parent }

func (cufwconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwconnsummarytable_Cufwconnsummaryentry) GetParentYangName() string { return "cufwConnSummaryTable" }

// CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable
// This table lists the summary of firewall 
// connections pertaining to Layer 7 protocols,
// catalogued by distinct application protocols.
// 
// Each entry in the table lists the connection
// summary corresponding to a distinct application 
// protocol.
// 
// For instance, to obtain the connection summary 
// for SMTP on the firewall since the last reboot 
// of the device, use the conceptual row 
// corresponding to 
// 
//    cufwAppConnProtocol = fwApSmtp
type CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Each entry contains the summary of connection activity for a distinct layer
    // 7 protocol identified by the index element 'cufwAppConnProtocol'. The type
    // is slice of
    // CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry.
    Cufwappconnsummaryentry []CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry
}

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetFilter() yfilter.YFilter { return cufwappconnsummarytable.YFilter }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) SetFilter(yf yfilter.YFilter) { cufwappconnsummarytable.YFilter = yf }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetGoName(yname string) string {
    if yname == "cufwAppConnSummaryEntry" { return "Cufwappconnsummaryentry" }
    return ""
}

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetSegmentPath() string {
    return "cufwAppConnSummaryTable"
}

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cufwAppConnSummaryEntry" {
        for _, c := range cufwappconnsummarytable.Cufwappconnsummaryentry {
            if cufwappconnsummarytable.GetSegmentPath() == segmentPath {
                return &c
            }
        }
        child := CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry{}
        cufwappconnsummarytable.Cufwappconnsummaryentry = append(cufwappconnsummarytable.Cufwappconnsummaryentry, child)
        return &cufwappconnsummarytable.Cufwappconnsummaryentry[len(cufwappconnsummarytable.Cufwappconnsummaryentry)-1]
    }
    return nil
}

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    for i := range cufwappconnsummarytable.Cufwappconnsummaryentry {
        children[cufwappconnsummarytable.Cufwappconnsummaryentry[i].GetSegmentPath()] = &cufwappconnsummarytable.Cufwappconnsummaryentry[i]
    }
    return children
}

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetBundleName() string { return "cisco_ios_xe" }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetYangName() string { return "cufwAppConnSummaryTable" }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) SetParent(parent types.Entity) { cufwappconnsummarytable.parent = parent }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetParent() types.Entity { return cufwappconnsummarytable.parent }

func (cufwappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry
// Each entry contains the summary of connection
// activity for a distinct layer 7 protocol identified
// by the index element 'cufwAppConnProtocol'.
type CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This attribute is a key. The layer7 protocol for which this conceptual  row
    // summarizes the connection activity for this  firewall. The type is
    // CFWApplicationProtocol.
    Cufwappconnprotocol interface{}

    // The number of connections attempted since the last reboot of the firewall,
    // corresponding to the protocol denoted by 'cufwAppConnProtocol'.  This value
    // is accumulated from the last reboot of the firewall subject to the control
    // exercised by cufwConnReptAppStats. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwappconnnumattempted interface{}

    // The number of connection setup attempts, corresponding to the protocol
    // denoted by  'cufwAppConnProtocol', that were aborted before the connection
    // could proceed to completion. The  counter includes setup attempts aborted
    // by the  firewall as well as those aborted by the initiator  and/or the
    // responder(s) of/to the connection setup  attempt.  Consequently, this value
    // subsumes the values of objects 'cufwAppConnNumPolicyDeclined' and 
    // 'cufwAppConnNumResDeclined'.  This value is accumulated from the last
    // reboot of the firewall subject to the control exercised by
    // cufwConnReptAppStats. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwappconnnumsetupsaborted interface{}

    // The number of connection attempts that were declined due to security
    // policy, corresponding to the protocol  denoted by 'cufwAppConnProtocol'. 
    // This value is accumulated from the last reboot of the firewall subject to
    // the control exercised by cufwConnReptAppStats. The type is interface{} with
    // range: 0..18446744073709551615. Units are Connections.
    Cufwappconnnumpolicydeclined interface{}

    // The number of connection attempts that were declined due to resource
    // unavailability, corresponding to the  protocol denoted by
    // 'cufwAppConnProtocol'.  This value is accumulated from the last reboot of
    // the firewall subject to the control exercised by cufwConnReptAppStats. The
    // type is interface{} with range: 0..18446744073709551615. Units are
    // Connections.
    Cufwappconnnumresdeclined interface{}

    // The number of connections that are currently in the process of being
    // established, corresponding to the  protocol denoted by
    // 'cufwAppConnProtocol'. The type is interface{} with range: 0..4294967295.
    // Units are Connections.
    Cufwappconnnumhalfopen interface{}

    // The number of connections that are currently active, corresponding to the
    // protocol denoted by  'cufwAppConnProtocol'. The type is interface{} with
    // range: 0..4294967295. Units are Connections.
    Cufwappconnnumactive interface{}

    // The number of connections that were terminated by the  firewall successful
    // establishment, corresponding  to the protocol denoted by
    // 'cufwAppConnProtocol'.  This value is accumulated from the last reboot of
    // the firewall subject to the control exercised by cufwConnReptAppStats. The
    // type is interface{} with range: 0..18446744073709551615. Units are
    // Connections.
    Cufwappconnnumaborted interface{}

    // The connection setup rate averaged over the last 60 seconds corresponding
    // to the protocol denoted by  'cufwAppConnProtocol'. The type is interface{}
    // with range: 0..4294967295. Units are Connections Per Second.
    Cufwappconnsetuprate1 interface{}

    // The connection setup rate averaged over the last 300 seconds corresponding
    // to the protocol denoted by  'cufwAppConnProtocol'. The type is interface{}
    // with range: 0..4294967295. Units are Connections Per Second.
    Cufwappconnsetuprate5 interface{}
}

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetFilter() yfilter.YFilter { return cufwappconnsummaryentry.YFilter }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) SetFilter(yf yfilter.YFilter) { cufwappconnsummaryentry.YFilter = yf }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetGoName(yname string) string {
    if yname == "cufwAppConnProtocol" { return "Cufwappconnprotocol" }
    if yname == "cufwAppConnNumAttempted" { return "Cufwappconnnumattempted" }
    if yname == "cufwAppConnNumSetupsAborted" { return "Cufwappconnnumsetupsaborted" }
    if yname == "cufwAppConnNumPolicyDeclined" { return "Cufwappconnnumpolicydeclined" }
    if yname == "cufwAppConnNumResDeclined" { return "Cufwappconnnumresdeclined" }
    if yname == "cufwAppConnNumHalfOpen" { return "Cufwappconnnumhalfopen" }
    if yname == "cufwAppConnNumActive" { return "Cufwappconnnumactive" }
    if yname == "cufwAppConnNumAborted" { return "Cufwappconnnumaborted" }
    if yname == "cufwAppConnSetupRate1" { return "Cufwappconnsetuprate1" }
    if yname == "cufwAppConnSetupRate5" { return "Cufwappconnsetuprate5" }
    return ""
}

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetSegmentPath() string {
    return "cufwAppConnSummaryEntry" + "[cufwAppConnProtocol='" + fmt.Sprintf("%v", cufwappconnsummaryentry.Cufwappconnprotocol) + "']"
}

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwAppConnProtocol"] = cufwappconnsummaryentry.Cufwappconnprotocol
    leafs["cufwAppConnNumAttempted"] = cufwappconnsummaryentry.Cufwappconnnumattempted
    leafs["cufwAppConnNumSetupsAborted"] = cufwappconnsummaryentry.Cufwappconnnumsetupsaborted
    leafs["cufwAppConnNumPolicyDeclined"] = cufwappconnsummaryentry.Cufwappconnnumpolicydeclined
    leafs["cufwAppConnNumResDeclined"] = cufwappconnsummaryentry.Cufwappconnnumresdeclined
    leafs["cufwAppConnNumHalfOpen"] = cufwappconnsummaryentry.Cufwappconnnumhalfopen
    leafs["cufwAppConnNumActive"] = cufwappconnsummaryentry.Cufwappconnnumactive
    leafs["cufwAppConnNumAborted"] = cufwappconnsummaryentry.Cufwappconnnumaborted
    leafs["cufwAppConnSetupRate1"] = cufwappconnsummaryentry.Cufwappconnsetuprate1
    leafs["cufwAppConnSetupRate5"] = cufwappconnsummaryentry.Cufwappconnsetuprate5
    return leafs
}

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetBundleName() string { return "cisco_ios_xe" }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetYangName() string { return "cufwAppConnSummaryEntry" }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) SetParent(parent types.Entity) { cufwappconnsummaryentry.parent = parent }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetParent() types.Entity { return cufwappconnsummaryentry.parent }

func (cufwappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwappconnsummarytable_Cufwappconnsummaryentry) GetParentYangName() string { return "cufwAppConnSummaryTable" }

// CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable
// This table lists the summary of firewall 
// connections for layer3-layer 4 protocols catalogued 
// on a per policy basis.
// 
// Each entry in the table lists the connection summary of
// a distinct network protocol, configured on the specified
// policy on the firewall, and pertaining to a specified 
// target to which the policy is currently applied. 
// 
// If a policy is bound to a target, it would have one
// or more entries in this table. If the policy is 
// detached from the target, all entries corresponding 
// to the association between the policy and the target 
// are elminated from this table.
// 
// Although the information is indexed by policy targets
// as well, one may aggregate the connection summary for
// a specific policy across all the target to which the 
// policy is currently applied by setting
// 
//       cufwConnPolicyTargetType =  'targetAll'
type CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Each entry contains the summary of connection activity for a specific
    // protocol in a specific policy applied to the specified policy target. The
    // type is slice of
    // CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry.
    Cufwpolicyconnsummaryentry []CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry
}

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetFilter() yfilter.YFilter { return cufwpolicyconnsummarytable.YFilter }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) SetFilter(yf yfilter.YFilter) { cufwpolicyconnsummarytable.YFilter = yf }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetGoName(yname string) string {
    if yname == "cufwPolicyConnSummaryEntry" { return "Cufwpolicyconnsummaryentry" }
    return ""
}

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetSegmentPath() string {
    return "cufwPolicyConnSummaryTable"
}

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cufwPolicyConnSummaryEntry" {
        for _, c := range cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry {
            if cufwpolicyconnsummarytable.GetSegmentPath() == segmentPath {
                return &c
            }
        }
        child := CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry{}
        cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry = append(cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry, child)
        return &cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry[len(cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry)-1]
    }
    return nil
}

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    for i := range cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry {
        children[cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry[i].GetSegmentPath()] = &cufwpolicyconnsummarytable.Cufwpolicyconnsummaryentry[i]
    }
    return children
}

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetBundleName() string { return "cisco_ios_xe" }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetYangName() string { return "cufwPolicyConnSummaryTable" }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) SetParent(parent types.Entity) { cufwpolicyconnsummarytable.parent = parent }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetParent() types.Entity { return cufwpolicyconnsummarytable.parent }

func (cufwpolicyconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry
// Each entry contains the summary of connection
// activity for a specific protocol in a specific
// policy applied to the specified policy target.
type CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This attribute is a key. The identity of the firewall policy for which this
    // conceptual row contains the connection  activity summary. The type is
    // string with length: 0..128.
    Cufwpolconnpolicy interface{}

    // This attribute is a key. The type of the entity to which the firewall
    // policy 'cufwPolConnPolicy' has been applied. This could be an interface
    // type (most commonly), the type of another object or a group of objects
    // defined in the firewall configuration.  When this object is set to
    // 'targetALL', the value of index object cufwConnPolicyTarget is ignored. The
    // type is CFWPolicyTargetType.
    Cufwpolconnpolicytargettype interface{}

    // This attribute is a key. The identity of the entity to which the firewall 
    // policy 'cufwPolConnPolicy' is applied. This could be an interface object
    // (most commonly), another object or group of objects defined in the firewall
    // configuration. The type is string with length: 0..128.
    Cufwpolconnpolicytarget interface{}

    // This attribute is a key. The (L3-L4) protocol corresponding to which this 
    // conceptual row summarizes the connection activity on the firewall. The type
    // is CFWNetworkProtocol.
    Cufwpolconnprotocol interface{}

    // The number of connections attempted since the last reboot of the firewall,
    // corresponding to the protocol denoted by 'cufwPolConnProtocol', in the
    // policy  'cufwPolConnPolicy' applied to the entity identified by
    // 'cufwPolConnPolicyTarget'. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolconnnumattempted interface{}

    // The number of connection setup attempts, corresponding to the protocol
    // denoted by  'cufwPolConnProtocol', associated with the policy 
    // 'cufwPolConnPolicy' applied to the entity identified by
    // 'cufwPolConnPolicyTarget', that were aborted before the connection could 
    // proceed to completion. The counter includes  setup attempts aborted by the
    // firewall as well  as those aborted by the initiator and/or the 
    // responder(s) of/to the connection setup attempt.  Consequently, this value
    // subsumes the values of objects 'cufwPolConnNumPolicyDeclined' and
    // 'cufwPolConnNumResDeclined'. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolconnnumsetupsaborted interface{}

    // The number of connection attempts that were declined due to security
    // policy, corresponding to the protocol  denoted by 'cufwPolConnProtocol', in
    // the policy  'cufwPolConnPolicy' applied to the entity identified by
    // 'cufwPolConnPolicyTarget'. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolconnnumpolicydeclined interface{}

    // The number of connection attempts that were declined due to resource
    // unavailability, corresponding to the  protocol denoted by
    // 'cufwPolConnProtocol', in the policy 'cufwPolConnPolicy' applied to the
    // entity identified by 'cufwPolConnPolicyTarget'. The type is interface{}
    // with range: 0..18446744073709551615. Units are Connections.
    Cufwpolconnnumresdeclined interface{}

    // The number of connections that are currently in the process of being
    // established, corresponding to the  protocol denoted by
    // 'cufwPolConnProtocol', in the  policy 'cufwPolConnPolicy' applied to the
    // entity identified by 'cufwPolConnPolicyTarget'. The type is interface{}
    // with range: 0..4294967295. Units are Connections.
    Cufwpolconnnumhalfopen interface{}

    // The number of connections that are currently active, corresponding to the
    // protocol denoted by  'cufwPolConnProtocol', in the policy 
    // 'cufwPolConnPolicy' applied to the entity identified by
    // 'cufwPolConnPolicyTarget'. The type is interface{} with range:
    // 0..4294967295. Units are Connections.
    Cufwpolconnnumactive interface{}

    // The number of connections that were abnormally  terminated after successful
    // establishment, corresponding to the protocol denoted by
    // 'cufwPolConnProtocol',  in the policy 'cufwPolConnPolicy' applied to the
    // entity identified by 'cufwPolConnPolicyTarget'. The type is interface{}
    // with range: 0..18446744073709551615. Units are Connections.
    Cufwpolconnnumaborted interface{}
}

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetFilter() yfilter.YFilter { return cufwpolicyconnsummaryentry.YFilter }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) SetFilter(yf yfilter.YFilter) { cufwpolicyconnsummaryentry.YFilter = yf }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetGoName(yname string) string {
    if yname == "cufwPolConnPolicy" { return "Cufwpolconnpolicy" }
    if yname == "cufwPolConnPolicyTargetType" { return "Cufwpolconnpolicytargettype" }
    if yname == "cufwPolConnPolicyTarget" { return "Cufwpolconnpolicytarget" }
    if yname == "cufwPolConnProtocol" { return "Cufwpolconnprotocol" }
    if yname == "cufwPolConnNumAttempted" { return "Cufwpolconnnumattempted" }
    if yname == "cufwPolConnNumSetupsAborted" { return "Cufwpolconnnumsetupsaborted" }
    if yname == "cufwPolConnNumPolicyDeclined" { return "Cufwpolconnnumpolicydeclined" }
    if yname == "cufwPolConnNumResDeclined" { return "Cufwpolconnnumresdeclined" }
    if yname == "cufwPolConnNumHalfOpen" { return "Cufwpolconnnumhalfopen" }
    if yname == "cufwPolConnNumActive" { return "Cufwpolconnnumactive" }
    if yname == "cufwPolConnNumAborted" { return "Cufwpolconnnumaborted" }
    return ""
}

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetSegmentPath() string {
    return "cufwPolicyConnSummaryEntry" + "[cufwPolConnPolicy='" + fmt.Sprintf("%v", cufwpolicyconnsummaryentry.Cufwpolconnpolicy) + "']" + "[cufwPolConnPolicyTargetType='" + fmt.Sprintf("%v", cufwpolicyconnsummaryentry.Cufwpolconnpolicytargettype) + "']" + "[cufwPolConnPolicyTarget='" + fmt.Sprintf("%v", cufwpolicyconnsummaryentry.Cufwpolconnpolicytarget) + "']" + "[cufwPolConnProtocol='" + fmt.Sprintf("%v", cufwpolicyconnsummaryentry.Cufwpolconnprotocol) + "']"
}

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwPolConnPolicy"] = cufwpolicyconnsummaryentry.Cufwpolconnpolicy
    leafs["cufwPolConnPolicyTargetType"] = cufwpolicyconnsummaryentry.Cufwpolconnpolicytargettype
    leafs["cufwPolConnPolicyTarget"] = cufwpolicyconnsummaryentry.Cufwpolconnpolicytarget
    leafs["cufwPolConnProtocol"] = cufwpolicyconnsummaryentry.Cufwpolconnprotocol
    leafs["cufwPolConnNumAttempted"] = cufwpolicyconnsummaryentry.Cufwpolconnnumattempted
    leafs["cufwPolConnNumSetupsAborted"] = cufwpolicyconnsummaryentry.Cufwpolconnnumsetupsaborted
    leafs["cufwPolConnNumPolicyDeclined"] = cufwpolicyconnsummaryentry.Cufwpolconnnumpolicydeclined
    leafs["cufwPolConnNumResDeclined"] = cufwpolicyconnsummaryentry.Cufwpolconnnumresdeclined
    leafs["cufwPolConnNumHalfOpen"] = cufwpolicyconnsummaryentry.Cufwpolconnnumhalfopen
    leafs["cufwPolConnNumActive"] = cufwpolicyconnsummaryentry.Cufwpolconnnumactive
    leafs["cufwPolConnNumAborted"] = cufwpolicyconnsummaryentry.Cufwpolconnnumaborted
    return leafs
}

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetBundleName() string { return "cisco_ios_xe" }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetYangName() string { return "cufwPolicyConnSummaryEntry" }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) SetParent(parent types.Entity) { cufwpolicyconnsummaryentry.parent = parent }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetParent() types.Entity { return cufwpolicyconnsummaryentry.parent }

func (cufwpolicyconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyconnsummarytable_Cufwpolicyconnsummaryentry) GetParentYangName() string { return "cufwPolicyConnSummaryTable" }

// CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable
// This table lists the summary of firewall 
// connections pertaining to Layer 7 protocols,
// catalogued on a per policy basis
// 
// Each entry in the table lists the connection
// summary of a distinct application protocol, 
// configured on the specified policy on the firewall, 
// and pertaining to a specified target to which the
// policy has been applied.
// 
// If a policy is bound to a target, it would have one
// or more entries in this table. If the policy is
// detached from the target, all entries corresponding
// to the association between the policy and the target
// are elminated from this table.
// 
// Although the information is indexed by policy targets
// as well, one may aggregate the connection summary for
// a specific policy across all the target to which the
// policy is currently applied by setting
// 
//       cufwAppConnPolicyTargetType = 'targetALL'
type CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Each entry contains the summary of connection activity for a specific layer
    // 7 protocol in a specific policy applied to the specified policy  target.
    // The type is slice of
    // CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry.
    Cufwpolicyappconnsummaryentry []CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry
}

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetFilter() yfilter.YFilter { return cufwpolicyappconnsummarytable.YFilter }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) SetFilter(yf yfilter.YFilter) { cufwpolicyappconnsummarytable.YFilter = yf }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetGoName(yname string) string {
    if yname == "cufwPolicyAppConnSummaryEntry" { return "Cufwpolicyappconnsummaryentry" }
    return ""
}

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetSegmentPath() string {
    return "cufwPolicyAppConnSummaryTable"
}

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cufwPolicyAppConnSummaryEntry" {
        for _, c := range cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry {
            if cufwpolicyappconnsummarytable.GetSegmentPath() == segmentPath {
                return &c
            }
        }
        child := CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry{}
        cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry = append(cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry, child)
        return &cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry[len(cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry)-1]
    }
    return nil
}

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    for i := range cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry {
        children[cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry[i].GetSegmentPath()] = &cufwpolicyappconnsummarytable.Cufwpolicyappconnsummaryentry[i]
    }
    return children
}

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetBundleName() string { return "cisco_ios_xe" }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetYangName() string { return "cufwPolicyAppConnSummaryTable" }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) SetParent(parent types.Entity) { cufwpolicyappconnsummarytable.parent = parent }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetParent() types.Entity { return cufwpolicyappconnsummarytable.parent }

func (cufwpolicyappconnsummarytable *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry
// Each entry contains the summary of connection
// activity for a specific layer 7 protocol in a
// specific policy applied to the specified policy 
// target.
type CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This attribute is a key. The identity of the firewall policy for which this
    // conceptual row contains the connection  activity summary. The type is
    // string with length: 0..128.
    Cufwpolappconnpolicy interface{}

    // This attribute is a key. The type of the entity to which the firewall
    // policy 'cufwPolAppConnPolicy' has been applied. This could be an interface
    // type (most commonly), the type of another object or a group of objects
    // defined in the firewall configuration.  When this object is set to
    // 'targetALL', the value of index object cufwAppConnPolicyTarget is ignored.
    // The type is CFWPolicyTargetType.
    Cufwpolappconnpolicytargettype interface{}

    // This attribute is a key. The identity of the entity to which the firewall 
    // policy 'cufwPolAppProtocol' refers. This could be an  interface object
    // (most commonly), another object or group of objects defined in the firewall
    // configuration. The type is string with length: 0..128.
    Cufwpolappconnpolicytarget interface{}

    // This attribute is a key. The layer7 protocol for which this conceptual  row
    // summarizes the connection activity for this  firewall. The type is
    // CFWApplicationProtocol.
    Cufwpolappconnprotocol interface{}

    // The number of connections attempted since the last reboot of the firewall,
    // corresponding to the protocol denoted by 'cufwPolAppConnProtocol', in the
    // policy  'cufwPolAppConnPolicy' applied to the entity identified by
    // 'cufwPolAppConnPolicyTarget'.  This value is accumulated from the last
    // reboot of the firewall subject to the control exercised by
    // cufwConnReptAppStats. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolappconnnumattempted interface{}

    // The number of connection setup attempts, corresponding to the protocol
    // denoted by  'cufwPolAppConnProtocol', associated with the policy
    // 'cufwPolAppConnPolicy' applied to the entity  identified by
    // 'cufwPolAppConnPolicyTarget', that were aborted before the connections
    // could  proceed to completion. The counter includes setup  attempts aborted
    // by the firewall as well as those  aborted by the initiator and/or the
    // responder(s)  of/to the connection setup attempt.  Consequently, this value
    // subsumes the values of objects 'cufwPolAppConnNumPolicyDeclined' and 
    // 'cufwPolAppConnNumResDeclined'.  This value is accumulated from the last
    // reboot of the firewall subject to the control exercised by
    // cufwConnReptAppStats. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolappconnnumsetupsaborted interface{}

    // The number of connection attempts that were declined due to security
    // policy, corresponding to the protocol  denoted by 'cufwPolAppConnProtocol',
    // in the policy  'cufwPolAppConnPolicy' applied to the entity identified by
    // 'cufwPolAppConnPolicyTarget'.  This value is accumulated from the last
    // reboot of the firewall subject to the control exercised by
    // cufwConnReptAppStats. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolappconnnumpolicydeclined interface{}

    // The number of connection attempts that were declined due to resource
    // unavailability, corresponding to the  protocol denoted by
    // 'cufwPolAppConnProtocol', in the policy 'cufwPolAppConnPolicy' applied to
    // the entity identified by 'cufwPolAppConnPolicyTarget'.  This value is
    // accumulated from the last reboot of the firewall subject to the control
    // exercised by cufwConnReptAppStats. The type is interface{} with range:
    // 0..18446744073709551615. Units are Connections.
    Cufwpolappconnnumresdeclined interface{}

    // The number of connections that are currently in the process of being
    // established, corresponding to the  protocol denoted by
    // 'cufwPolAppConnProtocol', in the policy  'cufwPolAppConnPolicy' applied to
    // the entity identified by 'cufwPolAppConnPolicyTarget'. The type is
    // interface{} with range: 0..4294967295. Units are Connections.
    Cufwpolappconnnumhalfopen interface{}

    // The number of connections that are currently active, corresponding to the
    // protocol denoted by  'cufwPolAppConnProtocol', in the policy 
    // 'cufwPolAppConnPolicy' applied to the entity identified by
    // 'cufwPolAppConnPolicyTarget'. The type is interface{} with range:
    // 0..4294967295. Units are Connections.
    Cufwpolappconnnumactive interface{}

    // The number of connections that were abnormally  terminated after successful
    // establishment, corresponding to the protocol denoted by
    // 'cufwPolAppConnProtocol', in the policy 'cufwPolAppConnPolicy' applied to
    // the entity identified by 'cufwPolAppConnPolicyTarget'. The type is
    // interface{} with range: 0..18446744073709551615. Units are Connections.
    Cufwpolappconnnumaborted interface{}
}

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetFilter() yfilter.YFilter { return cufwpolicyappconnsummaryentry.YFilter }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) SetFilter(yf yfilter.YFilter) { cufwpolicyappconnsummaryentry.YFilter = yf }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetGoName(yname string) string {
    if yname == "cufwPolAppConnPolicy" { return "Cufwpolappconnpolicy" }
    if yname == "cufwPolAppConnPolicyTargetType" { return "Cufwpolappconnpolicytargettype" }
    if yname == "cufwPolAppConnPolicyTarget" { return "Cufwpolappconnpolicytarget" }
    if yname == "cufwPolAppConnProtocol" { return "Cufwpolappconnprotocol" }
    if yname == "cufwPolAppConnNumAttempted" { return "Cufwpolappconnnumattempted" }
    if yname == "cufwPolAppConnNumSetupsAborted" { return "Cufwpolappconnnumsetupsaborted" }
    if yname == "cufwPolAppConnNumPolicyDeclined" { return "Cufwpolappconnnumpolicydeclined" }
    if yname == "cufwPolAppConnNumResDeclined" { return "Cufwpolappconnnumresdeclined" }
    if yname == "cufwPolAppConnNumHalfOpen" { return "Cufwpolappconnnumhalfopen" }
    if yname == "cufwPolAppConnNumActive" { return "Cufwpolappconnnumactive" }
    if yname == "cufwPolAppConnNumAborted" { return "Cufwpolappconnnumaborted" }
    return ""
}

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetSegmentPath() string {
    return "cufwPolicyAppConnSummaryEntry" + "[cufwPolAppConnPolicy='" + fmt.Sprintf("%v", cufwpolicyappconnsummaryentry.Cufwpolappconnpolicy) + "']" + "[cufwPolAppConnPolicyTargetType='" + fmt.Sprintf("%v", cufwpolicyappconnsummaryentry.Cufwpolappconnpolicytargettype) + "']" + "[cufwPolAppConnPolicyTarget='" + fmt.Sprintf("%v", cufwpolicyappconnsummaryentry.Cufwpolappconnpolicytarget) + "']" + "[cufwPolAppConnProtocol='" + fmt.Sprintf("%v", cufwpolicyappconnsummaryentry.Cufwpolappconnprotocol) + "']"
}

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwPolAppConnPolicy"] = cufwpolicyappconnsummaryentry.Cufwpolappconnpolicy
    leafs["cufwPolAppConnPolicyTargetType"] = cufwpolicyappconnsummaryentry.Cufwpolappconnpolicytargettype
    leafs["cufwPolAppConnPolicyTarget"] = cufwpolicyappconnsummaryentry.Cufwpolappconnpolicytarget
    leafs["cufwPolAppConnProtocol"] = cufwpolicyappconnsummaryentry.Cufwpolappconnprotocol
    leafs["cufwPolAppConnNumAttempted"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumattempted
    leafs["cufwPolAppConnNumSetupsAborted"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumsetupsaborted
    leafs["cufwPolAppConnNumPolicyDeclined"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumpolicydeclined
    leafs["cufwPolAppConnNumResDeclined"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumresdeclined
    leafs["cufwPolAppConnNumHalfOpen"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumhalfopen
    leafs["cufwPolAppConnNumActive"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumactive
    leafs["cufwPolAppConnNumAborted"] = cufwpolicyappconnsummaryentry.Cufwpolappconnnumaborted
    return leafs
}

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetBundleName() string { return "cisco_ios_xe" }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetYangName() string { return "cufwPolicyAppConnSummaryEntry" }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) SetParent(parent types.Entity) { cufwpolicyappconnsummaryentry.parent = parent }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetParent() types.Entity { return cufwpolicyappconnsummaryentry.parent }

func (cufwpolicyappconnsummaryentry *CISCOUNIFIEDFIREWALLMIB_Cufwpolicyappconnsummarytable_Cufwpolicyappconnsummaryentry) GetParentYangName() string { return "cufwPolicyAppConnSummaryTable" }

// CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable
// This table identifies if an application protocol has
// been configured for inspection and if so, the name of 
// the firewall policy or the inspection configuration
// that configures the specified protocol for inspection.
// The table also identifies if the specified protocol is
// actively being inspected.
// 
// This table may be used by an administrator to quickly
// identify if a protocol is being subjected to application
// inspection by the managed firewall.
type CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Each entry contains the configuration of a specific application inspection
    // element. The type is slice of
    // CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry.
    Cufwinspectionentry []CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry
}

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetFilter() yfilter.YFilter { return cufwinspectiontable.YFilter }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) SetFilter(yf yfilter.YFilter) { cufwinspectiontable.YFilter = yf }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetGoName(yname string) string {
    if yname == "cufwInspectionEntry" { return "Cufwinspectionentry" }
    return ""
}

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetSegmentPath() string {
    return "cufwInspectionTable"
}

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cufwInspectionEntry" {
        for _, c := range cufwinspectiontable.Cufwinspectionentry {
            if cufwinspectiontable.GetSegmentPath() == segmentPath {
                return &c
            }
        }
        child := CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry{}
        cufwinspectiontable.Cufwinspectionentry = append(cufwinspectiontable.Cufwinspectionentry, child)
        return &cufwinspectiontable.Cufwinspectionentry[len(cufwinspectiontable.Cufwinspectionentry)-1]
    }
    return nil
}

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    for i := range cufwinspectiontable.Cufwinspectionentry {
        children[cufwinspectiontable.Cufwinspectionentry[i].GetSegmentPath()] = &cufwinspectiontable.Cufwinspectionentry[i]
    }
    return children
}

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetBundleName() string { return "cisco_ios_xe" }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetYangName() string { return "cufwInspectionTable" }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) SetParent(parent types.Entity) { cufwinspectiontable.parent = parent }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetParent() types.Entity { return cufwinspectiontable.parent }

func (cufwinspectiontable *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry
// Each entry contains the configuration of
// a specific application inspection element.
type CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This attribute is a key. The name of the policy that configures the device
    // inspect the protocol specified by    'cufwInspectionProtocol'. The type is
    // string with length: 0..128.
    Cufwinspectionpolicyname interface{}

    // This attribute is a key. The application protocol that is configured for 
    // inspection. The type is CFWApplicationProtocol.
    Cufwinspectionprotocol interface{}

    // This MIB object identifies if the directive to inspect the protocol
    // specified by 'cufwInspectionProtocol' by the policy corresponding to this
    // conceptual row is enabled or disabled. The type is bool.
    Cufwinspectionstatus interface{}
}

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetFilter() yfilter.YFilter { return cufwinspectionentry.YFilter }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) SetFilter(yf yfilter.YFilter) { cufwinspectionentry.YFilter = yf }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetGoName(yname string) string {
    if yname == "cufwInspectionPolicyName" { return "Cufwinspectionpolicyname" }
    if yname == "cufwInspectionProtocol" { return "Cufwinspectionprotocol" }
    if yname == "cufwInspectionStatus" { return "Cufwinspectionstatus" }
    return ""
}

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetSegmentPath() string {
    return "cufwInspectionEntry" + "[cufwInspectionPolicyName='" + fmt.Sprintf("%v", cufwinspectionentry.Cufwinspectionpolicyname) + "']" + "[cufwInspectionProtocol='" + fmt.Sprintf("%v", cufwinspectionentry.Cufwinspectionprotocol) + "']"
}

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwInspectionPolicyName"] = cufwinspectionentry.Cufwinspectionpolicyname
    leafs["cufwInspectionProtocol"] = cufwinspectionentry.Cufwinspectionprotocol
    leafs["cufwInspectionStatus"] = cufwinspectionentry.Cufwinspectionstatus
    return leafs
}

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetBundleName() string { return "cisco_ios_xe" }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetYangName() string { return "cufwInspectionEntry" }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) SetParent(parent types.Entity) { cufwinspectionentry.parent = parent }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetParent() types.Entity { return cufwinspectionentry.parent }

func (cufwinspectionentry *CISCOUNIFIEDFIREWALLMIB_Cufwinspectiontable_Cufwinspectionentry) GetParentYangName() string { return "cufwInspectionTable" }

// CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable
// This table lists the URL filtering servers
// configured on the managed device and their
// performance statistics.
// 
// This table is not meant as a device to 
// configure URL filtering servers.
type CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // Each entry contains the configuration of a specific URL filtering server.
    // The type is slice of
    // CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry.
    Cufwurlfserverentry []CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry
}

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetFilter() yfilter.YFilter { return cufwurlfservertable.YFilter }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) SetFilter(yf yfilter.YFilter) { cufwurlfservertable.YFilter = yf }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetGoName(yname string) string {
    if yname == "cufwUrlfServerEntry" { return "Cufwurlfserverentry" }
    return ""
}

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetSegmentPath() string {
    return "cufwUrlfServerTable"
}

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetChildByName(childYangName string, segmentPath string) types.Entity {
    if childYangName == "cufwUrlfServerEntry" {
        for _, c := range cufwurlfservertable.Cufwurlfserverentry {
            if cufwurlfservertable.GetSegmentPath() == segmentPath {
                return &c
            }
        }
        child := CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry{}
        cufwurlfservertable.Cufwurlfserverentry = append(cufwurlfservertable.Cufwurlfserverentry, child)
        return &cufwurlfservertable.Cufwurlfserverentry[len(cufwurlfservertable.Cufwurlfserverentry)-1]
    }
    return nil
}

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    for i := range cufwurlfservertable.Cufwurlfserverentry {
        children[cufwurlfservertable.Cufwurlfserverentry[i].GetSegmentPath()] = &cufwurlfservertable.Cufwurlfserverentry[i]
    }
    return children
}

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    return leafs
}

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetBundleName() string { return "cisco_ios_xe" }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetYangName() string { return "cufwUrlfServerTable" }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) SetParent(parent types.Entity) { cufwurlfservertable.parent = parent }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetParent() types.Entity { return cufwurlfservertable.parent }

func (cufwurlfservertable *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable) GetParentYangName() string { return "CISCO-UNIFIED-FIREWALL-MIB" }

// CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry
// Each entry contains the configuration of
// a specific URL filtering server.
type CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry struct {
    parent types.Entity
    YFilter yfilter.YFilter

    // This attribute is a key. The type of the IP address of the URL filtering
    // server. The type is InetAddressType.
    Cufwurlfserveraddrtype interface{}

    // This attribute is a key. The value of the IP address of the URL filtering
    // server. The type is string with length: 0..255.
    Cufwurlfserveraddress interface{}

    // This attribute is a key. The value of the port at which the URL filtering
    // server listens for incoming requests. The type is interface{} with range:
    // 0..65535.
    Cufwurlfserverport interface{}

    // The vendor type of the URL filtering server. The type is CFWUrlfVendorId.
    Cufwurlfservervendor interface{}

    // The status of the URL filtering server corresponding to this conceptual
    // row. The type is CFWUrlServerStatus.
    Cufwurlfserverstatus interface{}

    // The number of URL access requests forwarded by the managed firewall device
    // to the URL filtering server corresponding to this conceptual row.  This
    // value is counted from the last reboot of the managed device. The type is
    // interface{} with range: 0..18446744073709551615.
    Cufwurlfserverreqsnumprocessed interface{}

    // The number of URL access requests allowed by the URL filtering server
    // corresponding to this conceptual  row. This counter does not include late
    // responses.  This value is counted from the last reboot of the managed
    // device. The type is interface{} with range: 0..18446744073709551615.
    Cufwurlfserverreqsnumallowed interface{}

    // The number of URL access requests denied by the URL filtering server
    // corresponding to this conceptual  row. This counter does not include late
    // responses.  This value is counted from the last reboot of the managed
    // device. The type is interface{} with range: 0..18446744073709551615.
    Cufwurlfserverreqsnumdenied interface{}

    // The number of times the firewall failed to receive a response from the URL
    // filtering server corresponding  to this conceptual row, for a request to
    // authorize a  URL access request.  This is equal to the number of times a
    // firewall removed a URL access request from the queue of pending requests
    // because no response was received from the URL filtering server.  This value
    // is accumulated from the last reboot of the firewall. The type is
    // interface{} with range: 0..18446744073709551615.
    Cufwurlfservernumtimeouts interface{}

    // The number of URL access authorization requests  re-sent by the firewall to
    // the URL Filtering Server  corresponding to this conceptual row, because a
    // response was not received within the configured time interval from the
    // server.  This value is counted from the last reboot of the managed device.
    // The type is interface{} with range: 0..18446744073709551615.
    Cufwurlfservernumretries interface{}

    // The number of URL access responses received by the firewall from the URL
    // filtering server corresponding  to this conceptual row. This counter does
    // not include  late responses.  This value is counted from the last reboot of
    // the managed device. The type is interface{} with range:
    // 0..18446744073709551615.
    Cufwurlfserverrespsnumreceived interface{}

    // The number of URL access responses received by the managed firewall from
    // the URL filtering server  corresponding to this conceptual row after the 
    // original URL access request was removed from the  queue of pending
    // requests.  This value is counted from the last reboot of the managed
    // device. The type is interface{} with range: 0..18446744073709551615.
    Cufwurlfserverrespsnumlate interface{}

    // The average round-trip response time of the URL filtering server computed
    // over the last 60 seconds.  A value of zero indicates that there was 
    // insufficient data to compute this value over the  last time interval. The
    // type is interface{} with range: 0..4294967295. Units are seconds.
    Cufwurlfserveravgresptime1 interface{}

    // The average round-trip response time of the URL filtering server computed
    // over the last 300 seconds.  A value of zero indicates that there was 
    // insufficient data to compute this value over the  last time interval. The
    // type is interface{} with range: 0..4294967295. Units are seconds.
    Cufwurlfserveravgresptime5 interface{}
}

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetFilter() yfilter.YFilter { return cufwurlfserverentry.YFilter }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) SetFilter(yf yfilter.YFilter) { cufwurlfserverentry.YFilter = yf }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetGoName(yname string) string {
    if yname == "cufwUrlfServerAddrType" { return "Cufwurlfserveraddrtype" }
    if yname == "cufwUrlfServerAddress" { return "Cufwurlfserveraddress" }
    if yname == "cufwUrlfServerPort" { return "Cufwurlfserverport" }
    if yname == "cufwUrlfServerVendor" { return "Cufwurlfservervendor" }
    if yname == "cufwUrlfServerStatus" { return "Cufwurlfserverstatus" }
    if yname == "cufwUrlfServerReqsNumProcessed" { return "Cufwurlfserverreqsnumprocessed" }
    if yname == "cufwUrlfServerReqsNumAllowed" { return "Cufwurlfserverreqsnumallowed" }
    if yname == "cufwUrlfServerReqsNumDenied" { return "Cufwurlfserverreqsnumdenied" }
    if yname == "cufwUrlfServerNumTimeouts" { return "Cufwurlfservernumtimeouts" }
    if yname == "cufwUrlfServerNumRetries" { return "Cufwurlfservernumretries" }
    if yname == "cufwUrlfServerRespsNumReceived" { return "Cufwurlfserverrespsnumreceived" }
    if yname == "cufwUrlfServerRespsNumLate" { return "Cufwurlfserverrespsnumlate" }
    if yname == "cufwUrlfServerAvgRespTime1" { return "Cufwurlfserveravgresptime1" }
    if yname == "cufwUrlfServerAvgRespTime5" { return "Cufwurlfserveravgresptime5" }
    return ""
}

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetSegmentPath() string {
    return "cufwUrlfServerEntry" + "[cufwUrlfServerAddrType='" + fmt.Sprintf("%v", cufwurlfserverentry.Cufwurlfserveraddrtype) + "']" + "[cufwUrlfServerAddress='" + fmt.Sprintf("%v", cufwurlfserverentry.Cufwurlfserveraddress) + "']" + "[cufwUrlfServerPort='" + fmt.Sprintf("%v", cufwurlfserverentry.Cufwurlfserverport) + "']"
}

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetChildByName(childYangName string, segmentPath string) types.Entity {
    return nil
}

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetChildren() map[string]types.Entity {
    children := make(map[string]types.Entity)
    return children
}

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetLeafs() map[string]interface{} {
    leafs := make(map[string]interface{})
    leafs["cufwUrlfServerAddrType"] = cufwurlfserverentry.Cufwurlfserveraddrtype
    leafs["cufwUrlfServerAddress"] = cufwurlfserverentry.Cufwurlfserveraddress
    leafs["cufwUrlfServerPort"] = cufwurlfserverentry.Cufwurlfserverport
    leafs["cufwUrlfServerVendor"] = cufwurlfserverentry.Cufwurlfservervendor
    leafs["cufwUrlfServerStatus"] = cufwurlfserverentry.Cufwurlfserverstatus
    leafs["cufwUrlfServerReqsNumProcessed"] = cufwurlfserverentry.Cufwurlfserverreqsnumprocessed
    leafs["cufwUrlfServerReqsNumAllowed"] = cufwurlfserverentry.Cufwurlfserverreqsnumallowed
    leafs["cufwUrlfServerReqsNumDenied"] = cufwurlfserverentry.Cufwurlfserverreqsnumdenied
    leafs["cufwUrlfServerNumTimeouts"] = cufwurlfserverentry.Cufwurlfservernumtimeouts
    leafs["cufwUrlfServerNumRetries"] = cufwurlfserverentry.Cufwurlfservernumretries
    leafs["cufwUrlfServerRespsNumReceived"] = cufwurlfserverentry.Cufwurlfserverrespsnumreceived
    leafs["cufwUrlfServerRespsNumLate"] = cufwurlfserverentry.Cufwurlfserverrespsnumlate
    leafs["cufwUrlfServerAvgRespTime1"] = cufwurlfserverentry.Cufwurlfserveravgresptime1
    leafs["cufwUrlfServerAvgRespTime5"] = cufwurlfserverentry.Cufwurlfserveravgresptime5
    return leafs
}

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetBundleName() string { return "cisco_ios_xe" }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetYangName() string { return "cufwUrlfServerEntry" }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetBundleYangModelsLocation() string { return cisco_ios_xe.GetModelsPath() }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetCapabilitiesTable() map[string]string {
    return cisco_ios_xe.GetCapabilities() }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetNamespaceTable() map[string]string {
    return cisco_ios_xe.GetNamespaces() }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) SetParent(parent types.Entity) { cufwurlfserverentry.parent = parent }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetParent() types.Entity { return cufwurlfserverentry.parent }

func (cufwurlfserverentry *CISCOUNIFIEDFIREWALLMIB_Cufwurlfservertable_Cufwurlfserverentry) GetParentYangName() string { return "cufwUrlfServerTable" }

